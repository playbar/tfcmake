// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/control_flow.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/protobuf/control_flow.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
class ValuesDef_ExternalValuesEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ValuesDef::ValuesDef_ExternalValuesEntry>
     _instance;
} _ValuesDef_ExternalValuesEntry_default_instance_;
class ValuesDefDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ValuesDef>
     _instance;
} _ValuesDef_default_instance_;
class ControlFlowContextDefDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ControlFlowContextDef>
     _instance;
  const ::tensorflow::CondContextDef* cond_ctxt_;
  const ::tensorflow::WhileContextDef* while_ctxt_;
} _ControlFlowContextDef_default_instance_;
class CondContextDefDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CondContextDef>
     _instance;
} _CondContextDef_default_instance_;
class WhileContextDefDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WhileContextDef>
     _instance;
} _WhileContextDef_default_instance_;

namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValuesDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValuesDef, values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValuesDef, external_values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlFlowContextDef, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlFlowContextDef, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(ControlFlowContextDefDefaultTypeInternal, cond_ctxt_),
  offsetof(ControlFlowContextDefDefaultTypeInternal, while_ctxt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlFlowContextDef, ctxt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, context_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, pred_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, pivot_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, branch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, values_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, nested_contexts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, context_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, parallel_iterations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, back_prop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, swap_memory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, pivot_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, pivot_for_pred_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, pivot_for_body_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, loop_exit_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, loop_enter_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, values_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, maximum_iterations_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, nested_contexts_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(ValuesDef)},
  { 7, -1, sizeof(ControlFlowContextDef)},
  { 15, -1, sizeof(CondContextDef)},
  { 26, -1, sizeof(WhileContextDef)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ValuesDef_ExternalValuesEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ValuesDef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ControlFlowContextDef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CondContextDef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WhileContextDef_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tensorflow/core/protobuf/control_flow.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[0].reflection = ValuesDef::ValuesDef_ExternalValuesEntry::CreateReflection(file_level_metadata[0].descriptor, _ValuesDef_ExternalValuesEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ValuesDef_ExternalValuesEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ValuesDef_ExternalValuesEntry_default_instance_);_ValuesDef_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ValuesDef_default_instance_);_ControlFlowContextDef_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ControlFlowContextDef_default_instance_);_CondContextDef_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CondContextDef_default_instance_);_WhileContextDef_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WhileContextDef_default_instance_);_ValuesDef_ExternalValuesEntry_default_instance_._instance.get_mutable()->set_default_instance(_ValuesDef_ExternalValuesEntry_default_instance_._instance.get_mutable());
  _ValuesDef_ExternalValuesEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ControlFlowContextDef_default_instance_.cond_ctxt_ = const_cast< ::tensorflow::CondContextDef*>(
      ::tensorflow::CondContextDef::internal_default_instance());
  _ControlFlowContextDef_default_instance_.while_ctxt_ = const_cast< ::tensorflow::WhileContextDef*>(
      ::tensorflow::WhileContextDef::internal_default_instance());
  _CondContextDef_default_instance_._instance.get_mutable()->values_def_ = const_cast< ::tensorflow::ValuesDef*>(
      ::tensorflow::ValuesDef::internal_default_instance());
  _WhileContextDef_default_instance_._instance.get_mutable()->values_def_ = const_cast< ::tensorflow::ValuesDef*>(
      ::tensorflow::ValuesDef::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n+tensorflow/core/protobuf/control_flow."
      "proto\022\ntensorflow\"\226\001\n\tValuesDef\022\016\n\006value"
      "s\030\001 \003(\t\022B\n\017external_values\030\002 \003(\0132).tenso"
      "rflow.ValuesDef.ExternalValuesEntry\0325\n\023E"
      "xternalValuesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
      "\030\002 \001(\t:\0028\001\"\203\001\n\025ControlFlowContextDef\022/\n\t"
      "cond_ctxt\030\001 \001(\0132\032.tensorflow.CondContext"
      "DefH\000\0221\n\nwhile_ctxt\030\002 \001(\0132\033.tensorflow.W"
      "hileContextDefH\000B\006\n\004ctxt\"\304\001\n\016CondContext"
      "Def\022\024\n\014context_name\030\001 \001(\t\022\021\n\tpred_name\030\002"
      " \001(\t\022\022\n\npivot_name\030\003 \001(\t\022\016\n\006branch\030\004 \001(\005"
      "\022)\n\nvalues_def\030\005 \001(\0132\025.tensorflow.Values"
      "Def\022:\n\017nested_contexts\030\006 \003(\0132!.tensorflo"
      "w.ControlFlowContextDef\"\365\002\n\017WhileContext"
      "Def\022\024\n\014context_name\030\001 \001(\t\022\033\n\023parallel_it"
      "erations\030\002 \001(\005\022\021\n\tback_prop\030\003 \001(\010\022\023\n\013swa"
      "p_memory\030\004 \001(\010\022\022\n\npivot_name\030\005 \001(\t\022\033\n\023pi"
      "vot_for_pred_name\030\006 \001(\t\022\033\n\023pivot_for_bod"
      "y_name\030\007 \001(\t\022\027\n\017loop_exit_names\030\010 \003(\t\022\030\n"
      "\020loop_enter_names\030\n \003(\t\022)\n\nvalues_def\030\t "
      "\001(\0132\025.tensorflow.ValuesDef\022\037\n\027maximum_it"
      "erations_name\030\013 \001(\t\022:\n\017nested_contexts\030\014"
      " \003(\0132!.tensorflow.ControlFlowContextDefB"
      "p\n\030org.tensorflow.frameworkB\021ControlFlow"
      "ProtosP\001Z<github.com/tensorflow/tensorfl"
      "ow/tensorflow/go/core/protobuf\370\001\001b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1041);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/control_flow.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto


// ===================================================================

ValuesDef::ValuesDef_ExternalValuesEntry::ValuesDef_ExternalValuesEntry() {}
ValuesDef::ValuesDef_ExternalValuesEntry::ValuesDef_ExternalValuesEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ValuesDef::ValuesDef_ExternalValuesEntry::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[0];
}
void ValuesDef::ValuesDef_ExternalValuesEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ValuesDef::ValuesDef_ExternalValuesEntry::MergeFrom(const ValuesDef_ExternalValuesEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValuesDef::kValuesFieldNumber;
const int ValuesDef::kExternalValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValuesDef::ValuesDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ValuesDef)
}
ValuesDef::ValuesDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  values_(arena),
  external_values_(arena) {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ValuesDef)
}
ValuesDef::ValuesDef(const ValuesDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  external_values_.MergeFrom(from.external_values_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.ValuesDef)
}

void ValuesDef::SharedCtor() {
  _cached_size_ = 0;
}

ValuesDef::~ValuesDef() {
  // @@protoc_insertion_point(destructor:tensorflow.ValuesDef)
  SharedDtor();
}

void ValuesDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void ValuesDef::ArenaDtor(void* object) {
  ValuesDef* _this = reinterpret_cast< ValuesDef* >(object);
  (void)_this;
}
void ValuesDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ValuesDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValuesDef::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValuesDef& ValuesDef::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  return *internal_default_instance();
}

ValuesDef* ValuesDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ValuesDef>(arena);
}

void ValuesDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ValuesDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  external_values_.Clear();
  _internal_metadata_.Clear();
}

bool ValuesDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ValuesDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->values(this->values_size() - 1).data(),
            static_cast<int>(this->values(this->values_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.ValuesDef.values"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> external_values = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ValuesDef_ExternalValuesEntry::Parser< ::google::protobuf::internal::MapField<
              ValuesDef_ExternalValuesEntry,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&external_values_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.ValuesDef.ExternalValuesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.ValuesDef.ExternalValuesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ValuesDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ValuesDef)
  return false;
#undef DO_
}

void ValuesDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ValuesDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string values = 1;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ValuesDef.values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->values(i), output);
  }

  // map<string, string> external_values = 2;
  if (!this->external_values().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.ValuesDef.ExternalValuesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.ValuesDef.ExternalValuesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->external_values().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->external_values().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->external_values().begin();
          it != this->external_values().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(external_values_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->external_values().begin();
          it != this->external_values().end(); ++it) {
        entry.reset(external_values_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ValuesDef)
}

::google::protobuf::uint8* ValuesDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ValuesDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string values = 1;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ValuesDef.values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->values(i), target);
  }

  // map<string, string> external_values = 2;
  if (!this->external_values().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.ValuesDef.ExternalValuesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.ValuesDef.ExternalValuesEntry.value");
      }
    };

    if (deterministic &&
        this->external_values().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->external_values().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->external_values().begin();
          it != this->external_values().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(external_values_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->external_values().begin();
          it != this->external_values().end(); ++it) {
        entry.reset(external_values_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ValuesDef)
  return target;
}

size_t ValuesDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ValuesDef)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string values = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->values(i));
  }

  // map<string, string> external_values = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->external_values_size());
  {
    ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->external_values().begin();
        it != this->external_values().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(external_values_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValuesDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ValuesDef)
  GOOGLE_DCHECK_NE(&from, this);
  const ValuesDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValuesDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ValuesDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ValuesDef)
    MergeFrom(*source);
  }
}

void ValuesDef::MergeFrom(const ValuesDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ValuesDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  external_values_.MergeFrom(from.external_values_);
}

void ValuesDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ValuesDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValuesDef::CopyFrom(const ValuesDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ValuesDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValuesDef::IsInitialized() const {
  return true;
}

void ValuesDef::Swap(ValuesDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ValuesDef* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ValuesDef::UnsafeArenaSwap(ValuesDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ValuesDef::InternalSwap(ValuesDef* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  external_values_.Swap(&other->external_values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValuesDef::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ValuesDef

// repeated string values = 1;
int ValuesDef::values_size() const {
  return values_.size();
}
void ValuesDef::clear_values() {
  values_.Clear();
}
const ::std::string& ValuesDef::values(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.ValuesDef.values)
  return values_.Get(index);
}
::std::string* ValuesDef::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.ValuesDef.values)
  return values_.Mutable(index);
}
void ValuesDef::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.ValuesDef.values)
  values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ValuesDef::set_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tensorflow.ValuesDef.values)
  values_.Mutable(index)->assign(std::move(value));
}
#endif
void ValuesDef::set_values(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.ValuesDef.values)
}
void ValuesDef::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.ValuesDef.values)
}
::std::string* ValuesDef::add_values() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.ValuesDef.values)
  return values_.Add();
}
void ValuesDef::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.ValuesDef.values)
}
#if LANG_CXX11
void ValuesDef::add_values(::std::string&& value) {
  values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tensorflow.ValuesDef.values)
}
#endif
void ValuesDef::add_values(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.ValuesDef.values)
}
void ValuesDef::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.ValuesDef.values)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ValuesDef::values() const {
  // @@protoc_insertion_point(field_list:tensorflow.ValuesDef.values)
  return values_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ValuesDef::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.ValuesDef.values)
  return &values_;
}

// map<string, string> external_values = 2;
int ValuesDef::external_values_size() const {
  return external_values_.size();
}
void ValuesDef::clear_external_values() {
  external_values_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
ValuesDef::external_values() const {
  // @@protoc_insertion_point(field_map:tensorflow.ValuesDef.external_values)
  return external_values_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
ValuesDef::mutable_external_values() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.ValuesDef.external_values)
  return external_values_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlFlowContextDef::kCondCtxtFieldNumber;
const int ControlFlowContextDef::kWhileCtxtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlFlowContextDef::ControlFlowContextDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ControlFlowContextDef)
}
ControlFlowContextDef::ControlFlowContextDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ControlFlowContextDef)
}
ControlFlowContextDef::ControlFlowContextDef(const ControlFlowContextDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_ctxt();
  switch (from.ctxt_case()) {
    case kCondCtxt: {
      mutable_cond_ctxt()->::tensorflow::CondContextDef::MergeFrom(from.cond_ctxt());
      break;
    }
    case kWhileCtxt: {
      mutable_while_ctxt()->::tensorflow::WhileContextDef::MergeFrom(from.while_ctxt());
      break;
    }
    case CTXT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.ControlFlowContextDef)
}

void ControlFlowContextDef::SharedCtor() {
  clear_has_ctxt();
  _cached_size_ = 0;
}

ControlFlowContextDef::~ControlFlowContextDef() {
  // @@protoc_insertion_point(destructor:tensorflow.ControlFlowContextDef)
  SharedDtor();
}

void ControlFlowContextDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  if (has_ctxt()) {
    clear_ctxt();
  }
}

void ControlFlowContextDef::ArenaDtor(void* object) {
  ControlFlowContextDef* _this = reinterpret_cast< ControlFlowContextDef* >(object);
  (void)_this;
}
void ControlFlowContextDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ControlFlowContextDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlFlowContextDef::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControlFlowContextDef& ControlFlowContextDef::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  return *internal_default_instance();
}

ControlFlowContextDef* ControlFlowContextDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ControlFlowContextDef>(arena);
}

void ControlFlowContextDef::clear_ctxt() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.ControlFlowContextDef)
  switch (ctxt_case()) {
    case kCondCtxt: {
      if (GetArenaNoVirtual() == NULL) {
        delete ctxt_.cond_ctxt_;
      }
      break;
    }
    case kWhileCtxt: {
      if (GetArenaNoVirtual() == NULL) {
        delete ctxt_.while_ctxt_;
      }
      break;
    }
    case CTXT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CTXT_NOT_SET;
}


void ControlFlowContextDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ControlFlowContextDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ctxt();
  _internal_metadata_.Clear();
}

bool ControlFlowContextDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ControlFlowContextDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.CondContextDef cond_ctxt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cond_ctxt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.WhileContextDef while_ctxt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_while_ctxt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ControlFlowContextDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ControlFlowContextDef)
  return false;
#undef DO_
}

void ControlFlowContextDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ControlFlowContextDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.CondContextDef cond_ctxt = 1;
  if (has_cond_ctxt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *ctxt_.cond_ctxt_, output);
  }

  // .tensorflow.WhileContextDef while_ctxt = 2;
  if (has_while_ctxt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *ctxt_.while_ctxt_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ControlFlowContextDef)
}

::google::protobuf::uint8* ControlFlowContextDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ControlFlowContextDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.CondContextDef cond_ctxt = 1;
  if (has_cond_ctxt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *ctxt_.cond_ctxt_, deterministic, target);
  }

  // .tensorflow.WhileContextDef while_ctxt = 2;
  if (has_while_ctxt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *ctxt_.while_ctxt_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ControlFlowContextDef)
  return target;
}

size_t ControlFlowContextDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ControlFlowContextDef)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (ctxt_case()) {
    // .tensorflow.CondContextDef cond_ctxt = 1;
    case kCondCtxt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *ctxt_.cond_ctxt_);
      break;
    }
    // .tensorflow.WhileContextDef while_ctxt = 2;
    case kWhileCtxt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *ctxt_.while_ctxt_);
      break;
    }
    case CTXT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlFlowContextDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ControlFlowContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlFlowContextDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControlFlowContextDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ControlFlowContextDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ControlFlowContextDef)
    MergeFrom(*source);
  }
}

void ControlFlowContextDef::MergeFrom(const ControlFlowContextDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ControlFlowContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ctxt_case()) {
    case kCondCtxt: {
      mutable_cond_ctxt()->::tensorflow::CondContextDef::MergeFrom(from.cond_ctxt());
      break;
    }
    case kWhileCtxt: {
      mutable_while_ctxt()->::tensorflow::WhileContextDef::MergeFrom(from.while_ctxt());
      break;
    }
    case CTXT_NOT_SET: {
      break;
    }
  }
}

void ControlFlowContextDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ControlFlowContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlFlowContextDef::CopyFrom(const ControlFlowContextDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ControlFlowContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlFlowContextDef::IsInitialized() const {
  return true;
}

void ControlFlowContextDef::Swap(ControlFlowContextDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ControlFlowContextDef* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ControlFlowContextDef::UnsafeArenaSwap(ControlFlowContextDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ControlFlowContextDef::InternalSwap(ControlFlowContextDef* other) {
  using std::swap;
  swap(ctxt_, other->ctxt_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ControlFlowContextDef::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ControlFlowContextDef

// .tensorflow.CondContextDef cond_ctxt = 1;
bool ControlFlowContextDef::has_cond_ctxt() const {
  return ctxt_case() == kCondCtxt;
}
void ControlFlowContextDef::set_has_cond_ctxt() {
  _oneof_case_[0] = kCondCtxt;
}
void ControlFlowContextDef::clear_cond_ctxt() {
  if (has_cond_ctxt()) {
    if (GetArenaNoVirtual() == NULL) {
      delete ctxt_.cond_ctxt_;
    }
    clear_has_ctxt();
  }
}
 const ::tensorflow::CondContextDef& ControlFlowContextDef::cond_ctxt() const {
  // @@protoc_insertion_point(field_get:tensorflow.ControlFlowContextDef.cond_ctxt)
  return has_cond_ctxt()
      ? *ctxt_.cond_ctxt_
      : ::tensorflow::CondContextDef::default_instance();
}
::tensorflow::CondContextDef* ControlFlowContextDef::mutable_cond_ctxt() {
  if (!has_cond_ctxt()) {
    clear_ctxt();
    set_has_cond_ctxt();
    ctxt_.cond_ctxt_ = 
      ::google::protobuf::Arena::CreateMessage< ::tensorflow::CondContextDef >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.ControlFlowContextDef.cond_ctxt)
  return ctxt_.cond_ctxt_;
}
::tensorflow::CondContextDef* ControlFlowContextDef::release_cond_ctxt() {
  // @@protoc_insertion_point(field_release:tensorflow.ControlFlowContextDef.cond_ctxt)
  if (has_cond_ctxt()) {
    clear_has_ctxt();
    if (GetArenaNoVirtual() != NULL) {
      ::tensorflow::CondContextDef* temp = new ::tensorflow::CondContextDef(*ctxt_.cond_ctxt_);
      ctxt_.cond_ctxt_ = NULL;
      return temp;
    } else {
      ::tensorflow::CondContextDef* temp = ctxt_.cond_ctxt_;
      ctxt_.cond_ctxt_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void ControlFlowContextDef::set_allocated_cond_ctxt(::tensorflow::CondContextDef* cond_ctxt) {
  clear_ctxt();
  if (cond_ctxt) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(cond_ctxt) == NULL) {
      GetArenaNoVirtual()->Own(cond_ctxt);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(cond_ctxt)) {
      ::tensorflow::CondContextDef* new_cond_ctxt = 
          ::google::protobuf::Arena::CreateMessage< ::tensorflow::CondContextDef >(
          GetArenaNoVirtual());
      new_cond_ctxt->CopyFrom(*cond_ctxt);
      cond_ctxt = new_cond_ctxt;
    }
    set_has_cond_ctxt();
    ctxt_.cond_ctxt_ = cond_ctxt;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ControlFlowContextDef.cond_ctxt)
}
 ::tensorflow::CondContextDef* ControlFlowContextDef::unsafe_arena_release_cond_ctxt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.ControlFlowContextDef.cond_ctxt)
  if (has_cond_ctxt()) {
    clear_has_ctxt();
    ::tensorflow::CondContextDef* temp = ctxt_.cond_ctxt_;
    ctxt_.cond_ctxt_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void ControlFlowContextDef::unsafe_arena_set_allocated_cond_ctxt(::tensorflow::CondContextDef* cond_ctxt) {
  clear_ctxt();
  if (cond_ctxt) {
    set_has_cond_ctxt();
    ctxt_.cond_ctxt_ = cond_ctxt;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.ControlFlowContextDef.cond_ctxt)
}

// .tensorflow.WhileContextDef while_ctxt = 2;
bool ControlFlowContextDef::has_while_ctxt() const {
  return ctxt_case() == kWhileCtxt;
}
void ControlFlowContextDef::set_has_while_ctxt() {
  _oneof_case_[0] = kWhileCtxt;
}
void ControlFlowContextDef::clear_while_ctxt() {
  if (has_while_ctxt()) {
    if (GetArenaNoVirtual() == NULL) {
      delete ctxt_.while_ctxt_;
    }
    clear_has_ctxt();
  }
}
 const ::tensorflow::WhileContextDef& ControlFlowContextDef::while_ctxt() const {
  // @@protoc_insertion_point(field_get:tensorflow.ControlFlowContextDef.while_ctxt)
  return has_while_ctxt()
      ? *ctxt_.while_ctxt_
      : ::tensorflow::WhileContextDef::default_instance();
}
::tensorflow::WhileContextDef* ControlFlowContextDef::mutable_while_ctxt() {
  if (!has_while_ctxt()) {
    clear_ctxt();
    set_has_while_ctxt();
    ctxt_.while_ctxt_ = 
      ::google::protobuf::Arena::CreateMessage< ::tensorflow::WhileContextDef >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.ControlFlowContextDef.while_ctxt)
  return ctxt_.while_ctxt_;
}
::tensorflow::WhileContextDef* ControlFlowContextDef::release_while_ctxt() {
  // @@protoc_insertion_point(field_release:tensorflow.ControlFlowContextDef.while_ctxt)
  if (has_while_ctxt()) {
    clear_has_ctxt();
    if (GetArenaNoVirtual() != NULL) {
      ::tensorflow::WhileContextDef* temp = new ::tensorflow::WhileContextDef(*ctxt_.while_ctxt_);
      ctxt_.while_ctxt_ = NULL;
      return temp;
    } else {
      ::tensorflow::WhileContextDef* temp = ctxt_.while_ctxt_;
      ctxt_.while_ctxt_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void ControlFlowContextDef::set_allocated_while_ctxt(::tensorflow::WhileContextDef* while_ctxt) {
  clear_ctxt();
  if (while_ctxt) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(while_ctxt) == NULL) {
      GetArenaNoVirtual()->Own(while_ctxt);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(while_ctxt)) {
      ::tensorflow::WhileContextDef* new_while_ctxt = 
          ::google::protobuf::Arena::CreateMessage< ::tensorflow::WhileContextDef >(
          GetArenaNoVirtual());
      new_while_ctxt->CopyFrom(*while_ctxt);
      while_ctxt = new_while_ctxt;
    }
    set_has_while_ctxt();
    ctxt_.while_ctxt_ = while_ctxt;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ControlFlowContextDef.while_ctxt)
}
 ::tensorflow::WhileContextDef* ControlFlowContextDef::unsafe_arena_release_while_ctxt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.ControlFlowContextDef.while_ctxt)
  if (has_while_ctxt()) {
    clear_has_ctxt();
    ::tensorflow::WhileContextDef* temp = ctxt_.while_ctxt_;
    ctxt_.while_ctxt_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void ControlFlowContextDef::unsafe_arena_set_allocated_while_ctxt(::tensorflow::WhileContextDef* while_ctxt) {
  clear_ctxt();
  if (while_ctxt) {
    set_has_while_ctxt();
    ctxt_.while_ctxt_ = while_ctxt;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.ControlFlowContextDef.while_ctxt)
}

bool ControlFlowContextDef::has_ctxt() const {
  return ctxt_case() != CTXT_NOT_SET;
}
void ControlFlowContextDef::clear_has_ctxt() {
  _oneof_case_[0] = CTXT_NOT_SET;
}
ControlFlowContextDef::CtxtCase ControlFlowContextDef::ctxt_case() const {
  return ControlFlowContextDef::CtxtCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void CondContextDef::_slow_mutable_values_def() {
  values_def_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::ValuesDef >(
      GetArenaNoVirtual());
}
::tensorflow::ValuesDef* CondContextDef::_slow_release_values_def() {
  if (values_def_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::ValuesDef* temp = new ::tensorflow::ValuesDef(*values_def_);
    values_def_ = NULL;
    return temp;
  }
}
::tensorflow::ValuesDef* CondContextDef::unsafe_arena_release_values_def() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CondContextDef.values_def)
  
  ::tensorflow::ValuesDef* temp = values_def_;
  values_def_ = NULL;
  return temp;
}
void CondContextDef::_slow_set_allocated_values_def(
    ::google::protobuf::Arena* message_arena, ::tensorflow::ValuesDef** values_def) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*values_def) == NULL) {
      message_arena->Own(*values_def);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*values_def)) {
      ::tensorflow::ValuesDef* new_values_def = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::ValuesDef >(
            message_arena);
      new_values_def->CopyFrom(**values_def);
      *values_def = new_values_def;
    }
}
void CondContextDef::unsafe_arena_set_allocated_values_def(
    ::tensorflow::ValuesDef* values_def) {
  if (GetArenaNoVirtual() == NULL) {
    delete values_def_;
  }
  values_def_ = values_def;
  if (values_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CondContextDef.values_def)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CondContextDef::kContextNameFieldNumber;
const int CondContextDef::kPredNameFieldNumber;
const int CondContextDef::kPivotNameFieldNumber;
const int CondContextDef::kBranchFieldNumber;
const int CondContextDef::kValuesDefFieldNumber;
const int CondContextDef::kNestedContextsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CondContextDef::CondContextDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CondContextDef)
}
CondContextDef::CondContextDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  nested_contexts_(arena) {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CondContextDef)
}
CondContextDef::CondContextDef(const CondContextDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nested_contexts_(from.nested_contexts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.context_name().size() > 0) {
    context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_name(),
      GetArenaNoVirtual());
  }
  pred_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pred_name().size() > 0) {
    pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pred_name(),
      GetArenaNoVirtual());
  }
  pivot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pivot_name().size() > 0) {
    pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pivot_name(),
      GetArenaNoVirtual());
  }
  if (from.has_values_def()) {
    values_def_ = new ::tensorflow::ValuesDef(*from.values_def_);
  } else {
    values_def_ = NULL;
  }
  branch_ = from.branch_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.CondContextDef)
}

void CondContextDef::SharedCtor() {
  context_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pred_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pivot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&values_def_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&branch_) -
      reinterpret_cast<char*>(&values_def_)) + sizeof(branch_));
  _cached_size_ = 0;
}

CondContextDef::~CondContextDef() {
  // @@protoc_insertion_point(destructor:tensorflow.CondContextDef)
  SharedDtor();
}

void CondContextDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  context_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pred_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pivot_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != internal_default_instance()) delete values_def_;
}

void CondContextDef::ArenaDtor(void* object) {
  CondContextDef* _this = reinterpret_cast< CondContextDef* >(object);
  (void)_this;
}
void CondContextDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CondContextDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CondContextDef::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CondContextDef& CondContextDef::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  return *internal_default_instance();
}

CondContextDef* CondContextDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CondContextDef>(arena);
}

void CondContextDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CondContextDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nested_contexts_.Clear();
  context_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pred_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pivot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && values_def_ != NULL) {
    delete values_def_;
  }
  values_def_ = NULL;
  branch_ = 0;
  _internal_metadata_.Clear();
}

bool CondContextDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CondContextDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string context_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->context_name().data(), static_cast<int>(this->context_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CondContextDef.context_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pred_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pred_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pred_name().data(), static_cast<int>(this->pred_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CondContextDef.pred_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pivot_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pivot_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pivot_name().data(), static_cast<int>(this->pivot_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CondContextDef.pivot_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 branch = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &branch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.ValuesDef values_def = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_values_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.ControlFlowContextDef nested_contexts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nested_contexts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CondContextDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CondContextDef)
  return false;
#undef DO_
}

void CondContextDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CondContextDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_name = 1;
  if (this->context_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context_name().data(), static_cast<int>(this->context_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.context_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->context_name(), output);
  }

  // string pred_name = 2;
  if (this->pred_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pred_name().data(), static_cast<int>(this->pred_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.pred_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pred_name(), output);
  }

  // string pivot_name = 3;
  if (this->pivot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_name().data(), static_cast<int>(this->pivot_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.pivot_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pivot_name(), output);
  }

  // int32 branch = 4;
  if (this->branch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->branch(), output);
  }

  // .tensorflow.ValuesDef values_def = 5;
  if (this->has_values_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->values_def_, output);
  }

  // repeated .tensorflow.ControlFlowContextDef nested_contexts = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nested_contexts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->nested_contexts(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CondContextDef)
}

::google::protobuf::uint8* CondContextDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CondContextDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_name = 1;
  if (this->context_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context_name().data(), static_cast<int>(this->context_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.context_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->context_name(), target);
  }

  // string pred_name = 2;
  if (this->pred_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pred_name().data(), static_cast<int>(this->pred_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.pred_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pred_name(), target);
  }

  // string pivot_name = 3;
  if (this->pivot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_name().data(), static_cast<int>(this->pivot_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.pivot_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pivot_name(), target);
  }

  // int32 branch = 4;
  if (this->branch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->branch(), target);
  }

  // .tensorflow.ValuesDef values_def = 5;
  if (this->has_values_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->values_def_, deterministic, target);
  }

  // repeated .tensorflow.ControlFlowContextDef nested_contexts = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nested_contexts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->nested_contexts(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CondContextDef)
  return target;
}

size_t CondContextDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CondContextDef)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.ControlFlowContextDef nested_contexts = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->nested_contexts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nested_contexts(static_cast<int>(i)));
    }
  }

  // string context_name = 1;
  if (this->context_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->context_name());
  }

  // string pred_name = 2;
  if (this->pred_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pred_name());
  }

  // string pivot_name = 3;
  if (this->pivot_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pivot_name());
  }

  // .tensorflow.ValuesDef values_def = 5;
  if (this->has_values_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->values_def_);
  }

  // int32 branch = 4;
  if (this->branch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->branch());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CondContextDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CondContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  const CondContextDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CondContextDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CondContextDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CondContextDef)
    MergeFrom(*source);
  }
}

void CondContextDef::MergeFrom(const CondContextDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CondContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nested_contexts_.MergeFrom(from.nested_contexts_);
  if (from.context_name().size() > 0) {
    set_context_name(from.context_name());
  }
  if (from.pred_name().size() > 0) {
    set_pred_name(from.pred_name());
  }
  if (from.pivot_name().size() > 0) {
    set_pivot_name(from.pivot_name());
  }
  if (from.has_values_def()) {
    mutable_values_def()->::tensorflow::ValuesDef::MergeFrom(from.values_def());
  }
  if (from.branch() != 0) {
    set_branch(from.branch());
  }
}

void CondContextDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CondContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CondContextDef::CopyFrom(const CondContextDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CondContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CondContextDef::IsInitialized() const {
  return true;
}

void CondContextDef::Swap(CondContextDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CondContextDef* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CondContextDef::UnsafeArenaSwap(CondContextDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CondContextDef::InternalSwap(CondContextDef* other) {
  using std::swap;
  nested_contexts_.InternalSwap(&other->nested_contexts_);
  context_name_.Swap(&other->context_name_);
  pred_name_.Swap(&other->pred_name_);
  pivot_name_.Swap(&other->pivot_name_);
  swap(values_def_, other->values_def_);
  swap(branch_, other->branch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CondContextDef::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CondContextDef

// string context_name = 1;
void CondContextDef::clear_context_name() {
  context_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CondContextDef::context_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.context_name)
  return context_name_.Get();
}
void CondContextDef::set_context_name(const ::std::string& value) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.context_name)
}
#if LANG_CXX11
void CondContextDef::set_context_name(::std::string&& value) {
  
  context_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.CondContextDef.context_name)
}
#endif
void CondContextDef::set_context_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CondContextDef.context_name)
}
void CondContextDef::set_context_name(const char* value,
    size_t size) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CondContextDef.context_name)
}
::std::string* CondContextDef::mutable_context_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.context_name)
  return context_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::release_context_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.context_name)
  
  return context_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::unsafe_arena_release_context_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CondContextDef.context_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return context_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CondContextDef::set_allocated_context_name(::std::string* context_name) {
  if (context_name != NULL) {
    
  } else {
    
  }
  context_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.context_name)
}
void CondContextDef::unsafe_arena_set_allocated_context_name(
    ::std::string* context_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (context_name != NULL) {
    
  } else {
    
  }
  context_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      context_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CondContextDef.context_name)
}

// string pred_name = 2;
void CondContextDef::clear_pred_name() {
  pred_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CondContextDef::pred_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.pred_name)
  return pred_name_.Get();
}
void CondContextDef::set_pred_name(const ::std::string& value) {
  
  pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.pred_name)
}
#if LANG_CXX11
void CondContextDef::set_pred_name(::std::string&& value) {
  
  pred_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.CondContextDef.pred_name)
}
#endif
void CondContextDef::set_pred_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CondContextDef.pred_name)
}
void CondContextDef::set_pred_name(const char* value,
    size_t size) {
  
  pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CondContextDef.pred_name)
}
::std::string* CondContextDef::mutable_pred_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.pred_name)
  return pred_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::release_pred_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.pred_name)
  
  return pred_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::unsafe_arena_release_pred_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CondContextDef.pred_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pred_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CondContextDef::set_allocated_pred_name(::std::string* pred_name) {
  if (pred_name != NULL) {
    
  } else {
    
  }
  pred_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pred_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.pred_name)
}
void CondContextDef::unsafe_arena_set_allocated_pred_name(
    ::std::string* pred_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pred_name != NULL) {
    
  } else {
    
  }
  pred_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pred_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CondContextDef.pred_name)
}

// string pivot_name = 3;
void CondContextDef::clear_pivot_name() {
  pivot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CondContextDef::pivot_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.pivot_name)
  return pivot_name_.Get();
}
void CondContextDef::set_pivot_name(const ::std::string& value) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.pivot_name)
}
#if LANG_CXX11
void CondContextDef::set_pivot_name(::std::string&& value) {
  
  pivot_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.CondContextDef.pivot_name)
}
#endif
void CondContextDef::set_pivot_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CondContextDef.pivot_name)
}
void CondContextDef::set_pivot_name(const char* value,
    size_t size) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CondContextDef.pivot_name)
}
::std::string* CondContextDef::mutable_pivot_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.pivot_name)
  return pivot_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::release_pivot_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.pivot_name)
  
  return pivot_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::unsafe_arena_release_pivot_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CondContextDef.pivot_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pivot_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CondContextDef::set_allocated_pivot_name(::std::string* pivot_name) {
  if (pivot_name != NULL) {
    
  } else {
    
  }
  pivot_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pivot_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.pivot_name)
}
void CondContextDef::unsafe_arena_set_allocated_pivot_name(
    ::std::string* pivot_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pivot_name != NULL) {
    
  } else {
    
  }
  pivot_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pivot_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CondContextDef.pivot_name)
}

// int32 branch = 4;
void CondContextDef::clear_branch() {
  branch_ = 0;
}
::google::protobuf::int32 CondContextDef::branch() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.branch)
  return branch_;
}
void CondContextDef::set_branch(::google::protobuf::int32 value) {
  
  branch_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.branch)
}

// .tensorflow.ValuesDef values_def = 5;
bool CondContextDef::has_values_def() const {
  return this != internal_default_instance() && values_def_ != NULL;
}
void CondContextDef::clear_values_def() {
  if (GetArenaNoVirtual() == NULL && values_def_ != NULL) delete values_def_;
  values_def_ = NULL;
}
const ::tensorflow::ValuesDef& CondContextDef::values_def() const {
  const ::tensorflow::ValuesDef* p = values_def_;
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.values_def)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::ValuesDef*>(
      &::tensorflow::_ValuesDef_default_instance_);
}
::tensorflow::ValuesDef* CondContextDef::mutable_values_def() {
  
  if (values_def_ == NULL) {
    _slow_mutable_values_def();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.values_def)
  return values_def_;
}
::tensorflow::ValuesDef* CondContextDef::release_values_def() {
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.values_def)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_values_def();
  } else {
    ::tensorflow::ValuesDef* temp = values_def_;
    values_def_ = NULL;
    return temp;
  }
}
 void CondContextDef::set_allocated_values_def(::tensorflow::ValuesDef* values_def) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete values_def_;
  }
  if (values_def != NULL) {
    _slow_set_allocated_values_def(message_arena, &values_def);
  }
  values_def_ = values_def;
  if (values_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.values_def)
}

// repeated .tensorflow.ControlFlowContextDef nested_contexts = 6;
int CondContextDef::nested_contexts_size() const {
  return nested_contexts_.size();
}
void CondContextDef::clear_nested_contexts() {
  nested_contexts_.Clear();
}
const ::tensorflow::ControlFlowContextDef& CondContextDef::nested_contexts(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.nested_contexts)
  return nested_contexts_.Get(index);
}
::tensorflow::ControlFlowContextDef* CondContextDef::mutable_nested_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.nested_contexts)
  return nested_contexts_.Mutable(index);
}
::tensorflow::ControlFlowContextDef* CondContextDef::add_nested_contexts() {
  // @@protoc_insertion_point(field_add:tensorflow.CondContextDef.nested_contexts)
  return nested_contexts_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::ControlFlowContextDef >*
CondContextDef::mutable_nested_contexts() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CondContextDef.nested_contexts)
  return &nested_contexts_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::ControlFlowContextDef >&
CondContextDef::nested_contexts() const {
  // @@protoc_insertion_point(field_list:tensorflow.CondContextDef.nested_contexts)
  return nested_contexts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void WhileContextDef::_slow_mutable_values_def() {
  values_def_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::ValuesDef >(
      GetArenaNoVirtual());
}
::tensorflow::ValuesDef* WhileContextDef::_slow_release_values_def() {
  if (values_def_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::ValuesDef* temp = new ::tensorflow::ValuesDef(*values_def_);
    values_def_ = NULL;
    return temp;
  }
}
::tensorflow::ValuesDef* WhileContextDef::unsafe_arena_release_values_def() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.values_def)
  
  ::tensorflow::ValuesDef* temp = values_def_;
  values_def_ = NULL;
  return temp;
}
void WhileContextDef::_slow_set_allocated_values_def(
    ::google::protobuf::Arena* message_arena, ::tensorflow::ValuesDef** values_def) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*values_def) == NULL) {
      message_arena->Own(*values_def);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*values_def)) {
      ::tensorflow::ValuesDef* new_values_def = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::ValuesDef >(
            message_arena);
      new_values_def->CopyFrom(**values_def);
      *values_def = new_values_def;
    }
}
void WhileContextDef::unsafe_arena_set_allocated_values_def(
    ::tensorflow::ValuesDef* values_def) {
  if (GetArenaNoVirtual() == NULL) {
    delete values_def_;
  }
  values_def_ = values_def;
  if (values_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.values_def)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WhileContextDef::kContextNameFieldNumber;
const int WhileContextDef::kParallelIterationsFieldNumber;
const int WhileContextDef::kBackPropFieldNumber;
const int WhileContextDef::kSwapMemoryFieldNumber;
const int WhileContextDef::kPivotNameFieldNumber;
const int WhileContextDef::kPivotForPredNameFieldNumber;
const int WhileContextDef::kPivotForBodyNameFieldNumber;
const int WhileContextDef::kLoopExitNamesFieldNumber;
const int WhileContextDef::kLoopEnterNamesFieldNumber;
const int WhileContextDef::kValuesDefFieldNumber;
const int WhileContextDef::kMaximumIterationsNameFieldNumber;
const int WhileContextDef::kNestedContextsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WhileContextDef::WhileContextDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.WhileContextDef)
}
WhileContextDef::WhileContextDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  loop_exit_names_(arena),
  loop_enter_names_(arena),
  nested_contexts_(arena) {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.WhileContextDef)
}
WhileContextDef::WhileContextDef(const WhileContextDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      loop_exit_names_(from.loop_exit_names_),
      loop_enter_names_(from.loop_enter_names_),
      nested_contexts_(from.nested_contexts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.context_name().size() > 0) {
    context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_name(),
      GetArenaNoVirtual());
  }
  pivot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pivot_name().size() > 0) {
    pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pivot_name(),
      GetArenaNoVirtual());
  }
  pivot_for_pred_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pivot_for_pred_name().size() > 0) {
    pivot_for_pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pivot_for_pred_name(),
      GetArenaNoVirtual());
  }
  pivot_for_body_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pivot_for_body_name().size() > 0) {
    pivot_for_body_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pivot_for_body_name(),
      GetArenaNoVirtual());
  }
  maximum_iterations_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.maximum_iterations_name().size() > 0) {
    maximum_iterations_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.maximum_iterations_name(),
      GetArenaNoVirtual());
  }
  if (from.has_values_def()) {
    values_def_ = new ::tensorflow::ValuesDef(*from.values_def_);
  } else {
    values_def_ = NULL;
  }
  ::memcpy(&parallel_iterations_, &from.parallel_iterations_,
    static_cast<size_t>(reinterpret_cast<char*>(&swap_memory_) -
    reinterpret_cast<char*>(&parallel_iterations_)) + sizeof(swap_memory_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.WhileContextDef)
}

void WhileContextDef::SharedCtor() {
  context_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pivot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pivot_for_pred_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pivot_for_body_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maximum_iterations_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&values_def_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&swap_memory_) -
      reinterpret_cast<char*>(&values_def_)) + sizeof(swap_memory_));
  _cached_size_ = 0;
}

WhileContextDef::~WhileContextDef() {
  // @@protoc_insertion_point(destructor:tensorflow.WhileContextDef)
  SharedDtor();
}

void WhileContextDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  context_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pivot_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pivot_for_pred_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pivot_for_body_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  maximum_iterations_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != internal_default_instance()) delete values_def_;
}

void WhileContextDef::ArenaDtor(void* object) {
  WhileContextDef* _this = reinterpret_cast< WhileContextDef* >(object);
  (void)_this;
}
void WhileContextDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WhileContextDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WhileContextDef::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WhileContextDef& WhileContextDef::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  return *internal_default_instance();
}

WhileContextDef* WhileContextDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<WhileContextDef>(arena);
}

void WhileContextDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.WhileContextDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loop_exit_names_.Clear();
  loop_enter_names_.Clear();
  nested_contexts_.Clear();
  context_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pivot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pivot_for_pred_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pivot_for_body_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  maximum_iterations_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && values_def_ != NULL) {
    delete values_def_;
  }
  values_def_ = NULL;
  ::memset(&parallel_iterations_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&swap_memory_) -
      reinterpret_cast<char*>(&parallel_iterations_)) + sizeof(swap_memory_));
  _internal_metadata_.Clear();
}

bool WhileContextDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.WhileContextDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string context_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->context_name().data(), static_cast<int>(this->context_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.context_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 parallel_iterations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parallel_iterations_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool back_prop = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &back_prop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool swap_memory = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &swap_memory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pivot_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pivot_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pivot_name().data(), static_cast<int>(this->pivot_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.pivot_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pivot_for_pred_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pivot_for_pred_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pivot_for_pred_name().data(), static_cast<int>(this->pivot_for_pred_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.pivot_for_pred_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pivot_for_body_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pivot_for_body_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pivot_for_body_name().data(), static_cast<int>(this->pivot_for_body_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.pivot_for_body_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string loop_exit_names = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_loop_exit_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->loop_exit_names(this->loop_exit_names_size() - 1).data(),
            static_cast<int>(this->loop_exit_names(this->loop_exit_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.loop_exit_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.ValuesDef values_def = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_values_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string loop_enter_names = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_loop_enter_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->loop_enter_names(this->loop_enter_names_size() - 1).data(),
            static_cast<int>(this->loop_enter_names(this->loop_enter_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.loop_enter_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string maximum_iterations_name = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_maximum_iterations_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->maximum_iterations_name().data(), static_cast<int>(this->maximum_iterations_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.maximum_iterations_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.ControlFlowContextDef nested_contexts = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nested_contexts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.WhileContextDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.WhileContextDef)
  return false;
#undef DO_
}

void WhileContextDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.WhileContextDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_name = 1;
  if (this->context_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context_name().data(), static_cast<int>(this->context_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.context_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->context_name(), output);
  }

  // int32 parallel_iterations = 2;
  if (this->parallel_iterations() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->parallel_iterations(), output);
  }

  // bool back_prop = 3;
  if (this->back_prop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->back_prop(), output);
  }

  // bool swap_memory = 4;
  if (this->swap_memory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->swap_memory(), output);
  }

  // string pivot_name = 5;
  if (this->pivot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_name().data(), static_cast<int>(this->pivot_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pivot_name(), output);
  }

  // string pivot_for_pred_name = 6;
  if (this->pivot_for_pred_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_for_pred_name().data(), static_cast<int>(this->pivot_for_pred_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_for_pred_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->pivot_for_pred_name(), output);
  }

  // string pivot_for_body_name = 7;
  if (this->pivot_for_body_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_for_body_name().data(), static_cast<int>(this->pivot_for_body_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_for_body_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->pivot_for_body_name(), output);
  }

  // repeated string loop_exit_names = 8;
  for (int i = 0, n = this->loop_exit_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_exit_names(i).data(), static_cast<int>(this->loop_exit_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.loop_exit_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->loop_exit_names(i), output);
  }

  // .tensorflow.ValuesDef values_def = 9;
  if (this->has_values_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->values_def_, output);
  }

  // repeated string loop_enter_names = 10;
  for (int i = 0, n = this->loop_enter_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_enter_names(i).data(), static_cast<int>(this->loop_enter_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.loop_enter_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->loop_enter_names(i), output);
  }

  // string maximum_iterations_name = 11;
  if (this->maximum_iterations_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->maximum_iterations_name().data(), static_cast<int>(this->maximum_iterations_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.maximum_iterations_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->maximum_iterations_name(), output);
  }

  // repeated .tensorflow.ControlFlowContextDef nested_contexts = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nested_contexts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->nested_contexts(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.WhileContextDef)
}

::google::protobuf::uint8* WhileContextDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.WhileContextDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_name = 1;
  if (this->context_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context_name().data(), static_cast<int>(this->context_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.context_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->context_name(), target);
  }

  // int32 parallel_iterations = 2;
  if (this->parallel_iterations() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->parallel_iterations(), target);
  }

  // bool back_prop = 3;
  if (this->back_prop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->back_prop(), target);
  }

  // bool swap_memory = 4;
  if (this->swap_memory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->swap_memory(), target);
  }

  // string pivot_name = 5;
  if (this->pivot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_name().data(), static_cast<int>(this->pivot_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pivot_name(), target);
  }

  // string pivot_for_pred_name = 6;
  if (this->pivot_for_pred_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_for_pred_name().data(), static_cast<int>(this->pivot_for_pred_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_for_pred_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->pivot_for_pred_name(), target);
  }

  // string pivot_for_body_name = 7;
  if (this->pivot_for_body_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_for_body_name().data(), static_cast<int>(this->pivot_for_body_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_for_body_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->pivot_for_body_name(), target);
  }

  // repeated string loop_exit_names = 8;
  for (int i = 0, n = this->loop_exit_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_exit_names(i).data(), static_cast<int>(this->loop_exit_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.loop_exit_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->loop_exit_names(i), target);
  }

  // .tensorflow.ValuesDef values_def = 9;
  if (this->has_values_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->values_def_, deterministic, target);
  }

  // repeated string loop_enter_names = 10;
  for (int i = 0, n = this->loop_enter_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_enter_names(i).data(), static_cast<int>(this->loop_enter_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.loop_enter_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->loop_enter_names(i), target);
  }

  // string maximum_iterations_name = 11;
  if (this->maximum_iterations_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->maximum_iterations_name().data(), static_cast<int>(this->maximum_iterations_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.maximum_iterations_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->maximum_iterations_name(), target);
  }

  // repeated .tensorflow.ControlFlowContextDef nested_contexts = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nested_contexts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->nested_contexts(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.WhileContextDef)
  return target;
}

size_t WhileContextDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.WhileContextDef)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string loop_exit_names = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->loop_exit_names_size());
  for (int i = 0, n = this->loop_exit_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->loop_exit_names(i));
  }

  // repeated string loop_enter_names = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->loop_enter_names_size());
  for (int i = 0, n = this->loop_enter_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->loop_enter_names(i));
  }

  // repeated .tensorflow.ControlFlowContextDef nested_contexts = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->nested_contexts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nested_contexts(static_cast<int>(i)));
    }
  }

  // string context_name = 1;
  if (this->context_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->context_name());
  }

  // string pivot_name = 5;
  if (this->pivot_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pivot_name());
  }

  // string pivot_for_pred_name = 6;
  if (this->pivot_for_pred_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pivot_for_pred_name());
  }

  // string pivot_for_body_name = 7;
  if (this->pivot_for_body_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pivot_for_body_name());
  }

  // string maximum_iterations_name = 11;
  if (this->maximum_iterations_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->maximum_iterations_name());
  }

  // .tensorflow.ValuesDef values_def = 9;
  if (this->has_values_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->values_def_);
  }

  // int32 parallel_iterations = 2;
  if (this->parallel_iterations() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parallel_iterations());
  }

  // bool back_prop = 3;
  if (this->back_prop() != 0) {
    total_size += 1 + 1;
  }

  // bool swap_memory = 4;
  if (this->swap_memory() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WhileContextDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.WhileContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  const WhileContextDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WhileContextDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.WhileContextDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.WhileContextDef)
    MergeFrom(*source);
  }
}

void WhileContextDef::MergeFrom(const WhileContextDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.WhileContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  loop_exit_names_.MergeFrom(from.loop_exit_names_);
  loop_enter_names_.MergeFrom(from.loop_enter_names_);
  nested_contexts_.MergeFrom(from.nested_contexts_);
  if (from.context_name().size() > 0) {
    set_context_name(from.context_name());
  }
  if (from.pivot_name().size() > 0) {
    set_pivot_name(from.pivot_name());
  }
  if (from.pivot_for_pred_name().size() > 0) {
    set_pivot_for_pred_name(from.pivot_for_pred_name());
  }
  if (from.pivot_for_body_name().size() > 0) {
    set_pivot_for_body_name(from.pivot_for_body_name());
  }
  if (from.maximum_iterations_name().size() > 0) {
    set_maximum_iterations_name(from.maximum_iterations_name());
  }
  if (from.has_values_def()) {
    mutable_values_def()->::tensorflow::ValuesDef::MergeFrom(from.values_def());
  }
  if (from.parallel_iterations() != 0) {
    set_parallel_iterations(from.parallel_iterations());
  }
  if (from.back_prop() != 0) {
    set_back_prop(from.back_prop());
  }
  if (from.swap_memory() != 0) {
    set_swap_memory(from.swap_memory());
  }
}

void WhileContextDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.WhileContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WhileContextDef::CopyFrom(const WhileContextDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.WhileContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhileContextDef::IsInitialized() const {
  return true;
}

void WhileContextDef::Swap(WhileContextDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WhileContextDef* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void WhileContextDef::UnsafeArenaSwap(WhileContextDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WhileContextDef::InternalSwap(WhileContextDef* other) {
  using std::swap;
  loop_exit_names_.InternalSwap(&other->loop_exit_names_);
  loop_enter_names_.InternalSwap(&other->loop_enter_names_);
  nested_contexts_.InternalSwap(&other->nested_contexts_);
  context_name_.Swap(&other->context_name_);
  pivot_name_.Swap(&other->pivot_name_);
  pivot_for_pred_name_.Swap(&other->pivot_for_pred_name_);
  pivot_for_body_name_.Swap(&other->pivot_for_body_name_);
  maximum_iterations_name_.Swap(&other->maximum_iterations_name_);
  swap(values_def_, other->values_def_);
  swap(parallel_iterations_, other->parallel_iterations_);
  swap(back_prop_, other->back_prop_);
  swap(swap_memory_, other->swap_memory_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WhileContextDef::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WhileContextDef

// string context_name = 1;
void WhileContextDef::clear_context_name() {
  context_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WhileContextDef::context_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.context_name)
  return context_name_.Get();
}
void WhileContextDef::set_context_name(const ::std::string& value) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.context_name)
}
#if LANG_CXX11
void WhileContextDef::set_context_name(::std::string&& value) {
  
  context_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.WhileContextDef.context_name)
}
#endif
void WhileContextDef::set_context_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.context_name)
}
void WhileContextDef::set_context_name(const char* value,
    size_t size) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.context_name)
}
::std::string* WhileContextDef::mutable_context_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.context_name)
  return context_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::release_context_name() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.context_name)
  
  return context_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::unsafe_arena_release_context_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.context_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return context_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WhileContextDef::set_allocated_context_name(::std::string* context_name) {
  if (context_name != NULL) {
    
  } else {
    
  }
  context_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.context_name)
}
void WhileContextDef::unsafe_arena_set_allocated_context_name(
    ::std::string* context_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (context_name != NULL) {
    
  } else {
    
  }
  context_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      context_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.context_name)
}

// int32 parallel_iterations = 2;
void WhileContextDef::clear_parallel_iterations() {
  parallel_iterations_ = 0;
}
::google::protobuf::int32 WhileContextDef::parallel_iterations() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.parallel_iterations)
  return parallel_iterations_;
}
void WhileContextDef::set_parallel_iterations(::google::protobuf::int32 value) {
  
  parallel_iterations_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.parallel_iterations)
}

// bool back_prop = 3;
void WhileContextDef::clear_back_prop() {
  back_prop_ = false;
}
bool WhileContextDef::back_prop() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.back_prop)
  return back_prop_;
}
void WhileContextDef::set_back_prop(bool value) {
  
  back_prop_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.back_prop)
}

// bool swap_memory = 4;
void WhileContextDef::clear_swap_memory() {
  swap_memory_ = false;
}
bool WhileContextDef::swap_memory() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.swap_memory)
  return swap_memory_;
}
void WhileContextDef::set_swap_memory(bool value) {
  
  swap_memory_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.swap_memory)
}

// string pivot_name = 5;
void WhileContextDef::clear_pivot_name() {
  pivot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WhileContextDef::pivot_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.pivot_name)
  return pivot_name_.Get();
}
void WhileContextDef::set_pivot_name(const ::std::string& value) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.pivot_name)
}
#if LANG_CXX11
void WhileContextDef::set_pivot_name(::std::string&& value) {
  
  pivot_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.WhileContextDef.pivot_name)
}
#endif
void WhileContextDef::set_pivot_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.pivot_name)
}
void WhileContextDef::set_pivot_name(const char* value,
    size_t size) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.pivot_name)
}
::std::string* WhileContextDef::mutable_pivot_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.pivot_name)
  return pivot_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::release_pivot_name() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.pivot_name)
  
  return pivot_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::unsafe_arena_release_pivot_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.pivot_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pivot_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WhileContextDef::set_allocated_pivot_name(::std::string* pivot_name) {
  if (pivot_name != NULL) {
    
  } else {
    
  }
  pivot_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pivot_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.pivot_name)
}
void WhileContextDef::unsafe_arena_set_allocated_pivot_name(
    ::std::string* pivot_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pivot_name != NULL) {
    
  } else {
    
  }
  pivot_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pivot_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.pivot_name)
}

// string pivot_for_pred_name = 6;
void WhileContextDef::clear_pivot_for_pred_name() {
  pivot_for_pred_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WhileContextDef::pivot_for_pred_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.pivot_for_pred_name)
  return pivot_for_pred_name_.Get();
}
void WhileContextDef::set_pivot_for_pred_name(const ::std::string& value) {
  
  pivot_for_pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.pivot_for_pred_name)
}
#if LANG_CXX11
void WhileContextDef::set_pivot_for_pred_name(::std::string&& value) {
  
  pivot_for_pred_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.WhileContextDef.pivot_for_pred_name)
}
#endif
void WhileContextDef::set_pivot_for_pred_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pivot_for_pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.pivot_for_pred_name)
}
void WhileContextDef::set_pivot_for_pred_name(const char* value,
    size_t size) {
  
  pivot_for_pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.pivot_for_pred_name)
}
::std::string* WhileContextDef::mutable_pivot_for_pred_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.pivot_for_pred_name)
  return pivot_for_pred_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::release_pivot_for_pred_name() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.pivot_for_pred_name)
  
  return pivot_for_pred_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::unsafe_arena_release_pivot_for_pred_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.pivot_for_pred_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pivot_for_pred_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WhileContextDef::set_allocated_pivot_for_pred_name(::std::string* pivot_for_pred_name) {
  if (pivot_for_pred_name != NULL) {
    
  } else {
    
  }
  pivot_for_pred_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pivot_for_pred_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.pivot_for_pred_name)
}
void WhileContextDef::unsafe_arena_set_allocated_pivot_for_pred_name(
    ::std::string* pivot_for_pred_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pivot_for_pred_name != NULL) {
    
  } else {
    
  }
  pivot_for_pred_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pivot_for_pred_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.pivot_for_pred_name)
}

// string pivot_for_body_name = 7;
void WhileContextDef::clear_pivot_for_body_name() {
  pivot_for_body_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WhileContextDef::pivot_for_body_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.pivot_for_body_name)
  return pivot_for_body_name_.Get();
}
void WhileContextDef::set_pivot_for_body_name(const ::std::string& value) {
  
  pivot_for_body_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.pivot_for_body_name)
}
#if LANG_CXX11
void WhileContextDef::set_pivot_for_body_name(::std::string&& value) {
  
  pivot_for_body_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.WhileContextDef.pivot_for_body_name)
}
#endif
void WhileContextDef::set_pivot_for_body_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pivot_for_body_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.pivot_for_body_name)
}
void WhileContextDef::set_pivot_for_body_name(const char* value,
    size_t size) {
  
  pivot_for_body_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.pivot_for_body_name)
}
::std::string* WhileContextDef::mutable_pivot_for_body_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.pivot_for_body_name)
  return pivot_for_body_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::release_pivot_for_body_name() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.pivot_for_body_name)
  
  return pivot_for_body_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::unsafe_arena_release_pivot_for_body_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.pivot_for_body_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pivot_for_body_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WhileContextDef::set_allocated_pivot_for_body_name(::std::string* pivot_for_body_name) {
  if (pivot_for_body_name != NULL) {
    
  } else {
    
  }
  pivot_for_body_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pivot_for_body_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.pivot_for_body_name)
}
void WhileContextDef::unsafe_arena_set_allocated_pivot_for_body_name(
    ::std::string* pivot_for_body_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pivot_for_body_name != NULL) {
    
  } else {
    
  }
  pivot_for_body_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pivot_for_body_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.pivot_for_body_name)
}

// repeated string loop_exit_names = 8;
int WhileContextDef::loop_exit_names_size() const {
  return loop_exit_names_.size();
}
void WhileContextDef::clear_loop_exit_names() {
  loop_exit_names_.Clear();
}
const ::std::string& WhileContextDef::loop_exit_names(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.loop_exit_names)
  return loop_exit_names_.Get(index);
}
::std::string* WhileContextDef::mutable_loop_exit_names(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.loop_exit_names)
  return loop_exit_names_.Mutable(index);
}
void WhileContextDef::set_loop_exit_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.loop_exit_names)
  loop_exit_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void WhileContextDef::set_loop_exit_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.loop_exit_names)
  loop_exit_names_.Mutable(index)->assign(std::move(value));
}
#endif
void WhileContextDef::set_loop_exit_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  loop_exit_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.loop_exit_names)
}
void WhileContextDef::set_loop_exit_names(int index, const char* value, size_t size) {
  loop_exit_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.loop_exit_names)
}
::std::string* WhileContextDef::add_loop_exit_names() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.WhileContextDef.loop_exit_names)
  return loop_exit_names_.Add();
}
void WhileContextDef::add_loop_exit_names(const ::std::string& value) {
  loop_exit_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.WhileContextDef.loop_exit_names)
}
#if LANG_CXX11
void WhileContextDef::add_loop_exit_names(::std::string&& value) {
  loop_exit_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tensorflow.WhileContextDef.loop_exit_names)
}
#endif
void WhileContextDef::add_loop_exit_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  loop_exit_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.WhileContextDef.loop_exit_names)
}
void WhileContextDef::add_loop_exit_names(const char* value, size_t size) {
  loop_exit_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.WhileContextDef.loop_exit_names)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
WhileContextDef::loop_exit_names() const {
  // @@protoc_insertion_point(field_list:tensorflow.WhileContextDef.loop_exit_names)
  return loop_exit_names_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
WhileContextDef::mutable_loop_exit_names() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.WhileContextDef.loop_exit_names)
  return &loop_exit_names_;
}

// repeated string loop_enter_names = 10;
int WhileContextDef::loop_enter_names_size() const {
  return loop_enter_names_.size();
}
void WhileContextDef::clear_loop_enter_names() {
  loop_enter_names_.Clear();
}
const ::std::string& WhileContextDef::loop_enter_names(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.loop_enter_names)
  return loop_enter_names_.Get(index);
}
::std::string* WhileContextDef::mutable_loop_enter_names(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.loop_enter_names)
  return loop_enter_names_.Mutable(index);
}
void WhileContextDef::set_loop_enter_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.loop_enter_names)
  loop_enter_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void WhileContextDef::set_loop_enter_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.loop_enter_names)
  loop_enter_names_.Mutable(index)->assign(std::move(value));
}
#endif
void WhileContextDef::set_loop_enter_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  loop_enter_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.loop_enter_names)
}
void WhileContextDef::set_loop_enter_names(int index, const char* value, size_t size) {
  loop_enter_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.loop_enter_names)
}
::std::string* WhileContextDef::add_loop_enter_names() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.WhileContextDef.loop_enter_names)
  return loop_enter_names_.Add();
}
void WhileContextDef::add_loop_enter_names(const ::std::string& value) {
  loop_enter_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.WhileContextDef.loop_enter_names)
}
#if LANG_CXX11
void WhileContextDef::add_loop_enter_names(::std::string&& value) {
  loop_enter_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tensorflow.WhileContextDef.loop_enter_names)
}
#endif
void WhileContextDef::add_loop_enter_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  loop_enter_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.WhileContextDef.loop_enter_names)
}
void WhileContextDef::add_loop_enter_names(const char* value, size_t size) {
  loop_enter_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.WhileContextDef.loop_enter_names)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
WhileContextDef::loop_enter_names() const {
  // @@protoc_insertion_point(field_list:tensorflow.WhileContextDef.loop_enter_names)
  return loop_enter_names_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
WhileContextDef::mutable_loop_enter_names() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.WhileContextDef.loop_enter_names)
  return &loop_enter_names_;
}

// .tensorflow.ValuesDef values_def = 9;
bool WhileContextDef::has_values_def() const {
  return this != internal_default_instance() && values_def_ != NULL;
}
void WhileContextDef::clear_values_def() {
  if (GetArenaNoVirtual() == NULL && values_def_ != NULL) delete values_def_;
  values_def_ = NULL;
}
const ::tensorflow::ValuesDef& WhileContextDef::values_def() const {
  const ::tensorflow::ValuesDef* p = values_def_;
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.values_def)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::ValuesDef*>(
      &::tensorflow::_ValuesDef_default_instance_);
}
::tensorflow::ValuesDef* WhileContextDef::mutable_values_def() {
  
  if (values_def_ == NULL) {
    _slow_mutable_values_def();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.values_def)
  return values_def_;
}
::tensorflow::ValuesDef* WhileContextDef::release_values_def() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.values_def)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_values_def();
  } else {
    ::tensorflow::ValuesDef* temp = values_def_;
    values_def_ = NULL;
    return temp;
  }
}
 void WhileContextDef::set_allocated_values_def(::tensorflow::ValuesDef* values_def) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete values_def_;
  }
  if (values_def != NULL) {
    _slow_set_allocated_values_def(message_arena, &values_def);
  }
  values_def_ = values_def;
  if (values_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.values_def)
}

// string maximum_iterations_name = 11;
void WhileContextDef::clear_maximum_iterations_name() {
  maximum_iterations_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WhileContextDef::maximum_iterations_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.maximum_iterations_name)
  return maximum_iterations_name_.Get();
}
void WhileContextDef::set_maximum_iterations_name(const ::std::string& value) {
  
  maximum_iterations_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.maximum_iterations_name)
}
#if LANG_CXX11
void WhileContextDef::set_maximum_iterations_name(::std::string&& value) {
  
  maximum_iterations_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.WhileContextDef.maximum_iterations_name)
}
#endif
void WhileContextDef::set_maximum_iterations_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  maximum_iterations_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.maximum_iterations_name)
}
void WhileContextDef::set_maximum_iterations_name(const char* value,
    size_t size) {
  
  maximum_iterations_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.maximum_iterations_name)
}
::std::string* WhileContextDef::mutable_maximum_iterations_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.maximum_iterations_name)
  return maximum_iterations_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::release_maximum_iterations_name() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.maximum_iterations_name)
  
  return maximum_iterations_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::unsafe_arena_release_maximum_iterations_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.maximum_iterations_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return maximum_iterations_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WhileContextDef::set_allocated_maximum_iterations_name(::std::string* maximum_iterations_name) {
  if (maximum_iterations_name != NULL) {
    
  } else {
    
  }
  maximum_iterations_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), maximum_iterations_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.maximum_iterations_name)
}
void WhileContextDef::unsafe_arena_set_allocated_maximum_iterations_name(
    ::std::string* maximum_iterations_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (maximum_iterations_name != NULL) {
    
  } else {
    
  }
  maximum_iterations_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      maximum_iterations_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.maximum_iterations_name)
}

// repeated .tensorflow.ControlFlowContextDef nested_contexts = 12;
int WhileContextDef::nested_contexts_size() const {
  return nested_contexts_.size();
}
void WhileContextDef::clear_nested_contexts() {
  nested_contexts_.Clear();
}
const ::tensorflow::ControlFlowContextDef& WhileContextDef::nested_contexts(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.nested_contexts)
  return nested_contexts_.Get(index);
}
::tensorflow::ControlFlowContextDef* WhileContextDef::mutable_nested_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.nested_contexts)
  return nested_contexts_.Mutable(index);
}
::tensorflow::ControlFlowContextDef* WhileContextDef::add_nested_contexts() {
  // @@protoc_insertion_point(field_add:tensorflow.WhileContextDef.nested_contexts)
  return nested_contexts_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::ControlFlowContextDef >*
WhileContextDef::mutable_nested_contexts() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.WhileContextDef.nested_contexts)
  return &nested_contexts_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::ControlFlowContextDef >&
WhileContextDef::nested_contexts() const {
  // @@protoc_insertion_point(field_list:tensorflow.WhileContextDef.nested_contexts)
  return nested_contexts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
