// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/checkpointable_object_graph.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/protobuf/checkpointable_object_graph.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
class CheckpointableObjectGraph_CheckpointableObject_ObjectReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckpointableObjectGraph_CheckpointableObject_ObjectReference>
     _instance;
} _CheckpointableObjectGraph_CheckpointableObject_ObjectReference_default_instance_;
class CheckpointableObjectGraph_CheckpointableObject_SerializedTensorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckpointableObjectGraph_CheckpointableObject_SerializedTensor>
     _instance;
} _CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_default_instance_;
class CheckpointableObjectGraph_CheckpointableObject_SlotVariableReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference>
     _instance;
} _CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_default_instance_;
class CheckpointableObjectGraph_CheckpointableObjectDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckpointableObjectGraph_CheckpointableObject>
     _instance;
} _CheckpointableObjectGraph_CheckpointableObject_default_instance_;
class CheckpointableObjectGraphDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckpointableObjectGraph>
     _instance;
} _CheckpointableObjectGraph_default_instance_;

namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject_ObjectReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject_ObjectReference, node_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject_ObjectReference, local_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject_SerializedTensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject_SerializedTensor, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject_SerializedTensor, full_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject_SerializedTensor, checkpoint_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference, original_variable_node_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference, slot_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference, slot_variable_node_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject, children_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph_CheckpointableObject, slot_variables_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointableObjectGraph, nodes_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(CheckpointableObjectGraph_CheckpointableObject_ObjectReference)},
  { 7, -1, sizeof(CheckpointableObjectGraph_CheckpointableObject_SerializedTensor)},
  { 15, -1, sizeof(CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference)},
  { 23, -1, sizeof(CheckpointableObjectGraph_CheckpointableObject)},
  { 31, -1, sizeof(CheckpointableObjectGraph)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckpointableObjectGraph_CheckpointableObject_ObjectReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckpointableObjectGraph_CheckpointableObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckpointableObjectGraph_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tensorflow/core/protobuf/checkpointable_object_graph.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CheckpointableObjectGraph_CheckpointableObject_ObjectReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckpointableObjectGraph_CheckpointableObject_ObjectReference_default_instance_);_CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_default_instance_);_CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_default_instance_);_CheckpointableObjectGraph_CheckpointableObject_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckpointableObjectGraph_CheckpointableObject_default_instance_);_CheckpointableObjectGraph_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckpointableObjectGraph_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n:tensorflow/core/protobuf/checkpointabl"
      "e_object_graph.proto\022\ntensorflow\"\233\005\n\031Che"
      "ckpointableObjectGraph\022I\n\005nodes\030\001 \003(\0132:."
      "tensorflow.CheckpointableObjectGraph.Che"
      "ckpointableObject\032\262\004\n\024CheckpointableObje"
      "ct\022\\\n\010children\030\001 \003(\0132J.tensorflow.Checkp"
      "ointableObjectGraph.CheckpointableObject"
      ".ObjectReference\022_\n\nattributes\030\002 \003(\0132K.t"
      "ensorflow.CheckpointableObjectGraph.Chec"
      "kpointableObject.SerializedTensor\022h\n\016slo"
      "t_variables\030\003 \003(\0132P.tensorflow.Checkpoin"
      "tableObjectGraph.CheckpointableObject.Sl"
      "otVariableReference\0326\n\017ObjectReference\022\017"
      "\n\007node_id\030\001 \001(\005\022\022\n\nlocal_name\030\002 \001(\t\032K\n\020S"
      "erializedTensor\022\014\n\004name\030\001 \001(\t\022\021\n\tfull_na"
      "me\030\002 \001(\t\022\026\n\016checkpoint_key\030\003 \001(\t\032l\n\025Slot"
      "VariableReference\022!\n\031original_variable_n"
      "ode_id\030\001 \001(\005\022\021\n\tslot_name\030\002 \001(\t\022\035\n\025slot_"
      "variable_node_id\030\003 \001(\005B\003\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 755);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/checkpointable_object_graph.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckpointableObjectGraph_CheckpointableObject_ObjectReference::kNodeIdFieldNumber;
const int CheckpointableObjectGraph_CheckpointableObject_ObjectReference::kLocalNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckpointableObjectGraph_CheckpointableObject_ObjectReference::CheckpointableObjectGraph_CheckpointableObject_ObjectReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
}
CheckpointableObjectGraph_CheckpointableObject_ObjectReference::CheckpointableObjectGraph_CheckpointableObject_ObjectReference(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
}
CheckpointableObjectGraph_CheckpointableObject_ObjectReference::CheckpointableObjectGraph_CheckpointableObject_ObjectReference(const CheckpointableObjectGraph_CheckpointableObject_ObjectReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  local_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_name().size() > 0) {
    local_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_name(),
      GetArenaNoVirtual());
  }
  node_id_ = from.node_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
}

void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::SharedCtor() {
  local_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_id_ = 0;
  _cached_size_ = 0;
}

CheckpointableObjectGraph_CheckpointableObject_ObjectReference::~CheckpointableObjectGraph_CheckpointableObject_ObjectReference() {
  // @@protoc_insertion_point(destructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
  SharedDtor();
}

void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  local_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::ArenaDtor(void* object) {
  CheckpointableObjectGraph_CheckpointableObject_ObjectReference* _this = reinterpret_cast< CheckpointableObjectGraph_CheckpointableObject_ObjectReference* >(object);
  (void)_this;
}
void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckpointableObjectGraph_CheckpointableObject_ObjectReference::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckpointableObjectGraph_CheckpointableObject_ObjectReference& CheckpointableObjectGraph_CheckpointableObject_ObjectReference::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckpointableObjectGraph_CheckpointableObject_ObjectReference* CheckpointableObjectGraph_CheckpointableObject_ObjectReference::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CheckpointableObjectGraph_CheckpointableObject_ObjectReference>(arena);
}

void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  node_id_ = 0;
  _internal_metadata_.Clear();
}

bool CheckpointableObjectGraph_CheckpointableObject_ObjectReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 node_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_name().data(), static_cast<int>(this->local_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.local_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
  return false;
#undef DO_
}

void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 node_id = 1;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->node_id(), output);
  }

  // string local_name = 2;
  if (this->local_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_name().data(), static_cast<int>(this->local_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.local_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->local_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
}

::google::protobuf::uint8* CheckpointableObjectGraph_CheckpointableObject_ObjectReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 node_id = 1;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->node_id(), target);
  }

  // string local_name = 2;
  if (this->local_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_name().data(), static_cast<int>(this->local_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.local_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->local_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
  return target;
}

size_t CheckpointableObjectGraph_CheckpointableObject_ObjectReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string local_name = 2;
  if (this->local_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_name());
  }

  // int32 node_id = 1;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckpointableObjectGraph_CheckpointableObject_ObjectReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckpointableObjectGraph_CheckpointableObject_ObjectReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
    MergeFrom(*source);
  }
}

void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::MergeFrom(const CheckpointableObjectGraph_CheckpointableObject_ObjectReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.local_name().size() > 0) {
    set_local_name(from.local_name());
  }
  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
}

void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::CopyFrom(const CheckpointableObjectGraph_CheckpointableObject_ObjectReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckpointableObjectGraph_CheckpointableObject_ObjectReference::IsInitialized() const {
  return true;
}

void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::Swap(CheckpointableObjectGraph_CheckpointableObject_ObjectReference* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckpointableObjectGraph_CheckpointableObject_ObjectReference* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::UnsafeArenaSwap(CheckpointableObjectGraph_CheckpointableObject_ObjectReference* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::InternalSwap(CheckpointableObjectGraph_CheckpointableObject_ObjectReference* other) {
  using std::swap;
  local_name_.Swap(&other->local_name_);
  swap(node_id_, other->node_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckpointableObjectGraph_CheckpointableObject_ObjectReference::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckpointableObjectGraph_CheckpointableObject_ObjectReference

// int32 node_id = 1;
void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::clear_node_id() {
  node_id_ = 0;
}
::google::protobuf::int32 CheckpointableObjectGraph_CheckpointableObject_ObjectReference::node_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.node_id)
  return node_id_;
}
void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::set_node_id(::google::protobuf::int32 value) {
  
  node_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.node_id)
}

// string local_name = 2;
void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::clear_local_name() {
  local_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CheckpointableObjectGraph_CheckpointableObject_ObjectReference::local_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.local_name)
  return local_name_.Get();
}
void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::set_local_name(const ::std::string& value) {
  
  local_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.local_name)
}
#if LANG_CXX11
void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::set_local_name(::std::string&& value) {
  
  local_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.local_name)
}
#endif
void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::set_local_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  local_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.local_name)
}
void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::set_local_name(const char* value,
    size_t size) {
  
  local_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.local_name)
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_ObjectReference::mutable_local_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.local_name)
  return local_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_ObjectReference::release_local_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.local_name)
  
  return local_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_ObjectReference::unsafe_arena_release_local_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.local_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return local_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::set_allocated_local_name(::std::string* local_name) {
  if (local_name != NULL) {
    
  } else {
    
  }
  local_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), local_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.local_name)
}
void CheckpointableObjectGraph_CheckpointableObject_ObjectReference::unsafe_arena_set_allocated_local_name(
    ::std::string* local_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (local_name != NULL) {
    
  } else {
    
  }
  local_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      local_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.local_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::kNameFieldNumber;
const int CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::kFullNameFieldNumber;
const int CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::kCheckpointKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::CheckpointableObjectGraph_CheckpointableObject_SerializedTensor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
}
CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::CheckpointableObjectGraph_CheckpointableObject_SerializedTensor(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
}
CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::CheckpointableObjectGraph_CheckpointableObject_SerializedTensor(const CheckpointableObjectGraph_CheckpointableObject_SerializedTensor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.full_name().size() > 0) {
    full_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_name(),
      GetArenaNoVirtual());
  }
  checkpoint_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.checkpoint_key().size() > 0) {
    checkpoint_key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checkpoint_key(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
}

void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checkpoint_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::~CheckpointableObjectGraph_CheckpointableObject_SerializedTensor() {
  // @@protoc_insertion_point(destructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
  SharedDtor();
}

void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  full_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  checkpoint_key_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::ArenaDtor(void* object) {
  CheckpointableObjectGraph_CheckpointableObject_SerializedTensor* _this = reinterpret_cast< CheckpointableObjectGraph_CheckpointableObject_SerializedTensor* >(object);
  (void)_this;
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckpointableObjectGraph_CheckpointableObject_SerializedTensor& CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckpointableObjectGraph_CheckpointableObject_SerializedTensor* CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CheckpointableObjectGraph_CheckpointableObject_SerializedTensor>(arena);
}

void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  full_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  checkpoint_key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string full_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_full_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->full_name().data(), static_cast<int>(this->full_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.full_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string checkpoint_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_checkpoint_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->checkpoint_key().data(), static_cast<int>(this->checkpoint_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.checkpoint_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
  return false;
#undef DO_
}

void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string full_name = 2;
  if (this->full_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.full_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->full_name(), output);
  }

  // string checkpoint_key = 3;
  if (this->checkpoint_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checkpoint_key().data(), static_cast<int>(this->checkpoint_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.checkpoint_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->checkpoint_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
}

::google::protobuf::uint8* CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string full_name = 2;
  if (this->full_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.full_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->full_name(), target);
  }

  // string checkpoint_key = 3;
  if (this->checkpoint_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checkpoint_key().data(), static_cast<int>(this->checkpoint_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.checkpoint_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->checkpoint_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
  return target;
}

size_t CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string full_name = 2;
  if (this->full_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->full_name());
  }

  // string checkpoint_key = 3;
  if (this->checkpoint_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->checkpoint_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckpointableObjectGraph_CheckpointableObject_SerializedTensor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckpointableObjectGraph_CheckpointableObject_SerializedTensor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
    MergeFrom(*source);
  }
}

void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::MergeFrom(const CheckpointableObjectGraph_CheckpointableObject_SerializedTensor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.full_name().size() > 0) {
    set_full_name(from.full_name());
  }
  if (from.checkpoint_key().size() > 0) {
    set_checkpoint_key(from.checkpoint_key());
  }
}

void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::CopyFrom(const CheckpointableObjectGraph_CheckpointableObject_SerializedTensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::IsInitialized() const {
  return true;
}

void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::Swap(CheckpointableObjectGraph_CheckpointableObject_SerializedTensor* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckpointableObjectGraph_CheckpointableObject_SerializedTensor* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::UnsafeArenaSwap(CheckpointableObjectGraph_CheckpointableObject_SerializedTensor* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::InternalSwap(CheckpointableObjectGraph_CheckpointableObject_SerializedTensor* other) {
  using std::swap;
  name_.Swap(&other->name_);
  full_name_.Swap(&other->full_name_);
  checkpoint_key_.Swap(&other->checkpoint_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckpointableObjectGraph_CheckpointableObject_SerializedTensor

// string name = 1;
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.name)
  return name_.Get();
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.name)
}
#if LANG_CXX11
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.name)
}
#endif
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.name)
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.name)
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::release_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.name)
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.name)
}

// string full_name = 2;
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::clear_full_name() {
  full_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::full_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.full_name)
  return full_name_.Get();
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_full_name(const ::std::string& value) {
  
  full_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.full_name)
}
#if LANG_CXX11
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_full_name(::std::string&& value) {
  
  full_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.full_name)
}
#endif
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_full_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  full_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.full_name)
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_full_name(const char* value,
    size_t size) {
  
  full_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.full_name)
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::mutable_full_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.full_name)
  return full_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::release_full_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.full_name)
  
  return full_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::unsafe_arena_release_full_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.full_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return full_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_allocated_full_name(::std::string* full_name) {
  if (full_name != NULL) {
    
  } else {
    
  }
  full_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.full_name)
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::unsafe_arena_set_allocated_full_name(
    ::std::string* full_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (full_name != NULL) {
    
  } else {
    
  }
  full_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      full_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.full_name)
}

// string checkpoint_key = 3;
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::clear_checkpoint_key() {
  checkpoint_key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::checkpoint_key() const {
  // @@protoc_insertion_point(field_get:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.checkpoint_key)
  return checkpoint_key_.Get();
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_checkpoint_key(const ::std::string& value) {
  
  checkpoint_key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.checkpoint_key)
}
#if LANG_CXX11
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_checkpoint_key(::std::string&& value) {
  
  checkpoint_key_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.checkpoint_key)
}
#endif
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_checkpoint_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  checkpoint_key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.checkpoint_key)
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_checkpoint_key(const char* value,
    size_t size) {
  
  checkpoint_key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.checkpoint_key)
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::mutable_checkpoint_key() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.checkpoint_key)
  return checkpoint_key_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::release_checkpoint_key() {
  // @@protoc_insertion_point(field_release:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.checkpoint_key)
  
  return checkpoint_key_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::unsafe_arena_release_checkpoint_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.checkpoint_key)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return checkpoint_key_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::set_allocated_checkpoint_key(::std::string* checkpoint_key) {
  if (checkpoint_key != NULL) {
    
  } else {
    
  }
  checkpoint_key_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), checkpoint_key,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.checkpoint_key)
}
void CheckpointableObjectGraph_CheckpointableObject_SerializedTensor::unsafe_arena_set_allocated_checkpoint_key(
    ::std::string* checkpoint_key) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (checkpoint_key != NULL) {
    
  } else {
    
  }
  checkpoint_key_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      checkpoint_key, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.checkpoint_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::kOriginalVariableNodeIdFieldNumber;
const int CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::kSlotNameFieldNumber;
const int CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::kSlotVariableNodeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
}
CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
}
CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference(const CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.slot_name().size() > 0) {
    slot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slot_name(),
      GetArenaNoVirtual());
  }
  ::memcpy(&original_variable_node_id_, &from.original_variable_node_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&slot_variable_node_id_) -
    reinterpret_cast<char*>(&original_variable_node_id_)) + sizeof(slot_variable_node_id_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
}

void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::SharedCtor() {
  slot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&original_variable_node_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slot_variable_node_id_) -
      reinterpret_cast<char*>(&original_variable_node_id_)) + sizeof(slot_variable_node_id_));
  _cached_size_ = 0;
}

CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::~CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference() {
  // @@protoc_insertion_point(destructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
  SharedDtor();
}

void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  slot_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::ArenaDtor(void* object) {
  CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* _this = reinterpret_cast< CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* >(object);
  (void)_this;
}
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference& CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference>(arena);
}

void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&original_variable_node_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slot_variable_node_id_) -
      reinterpret_cast<char*>(&original_variable_node_id_)) + sizeof(slot_variable_node_id_));
  _internal_metadata_.Clear();
}

bool CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 original_variable_node_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &original_variable_node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string slot_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slot_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->slot_name().data(), static_cast<int>(this->slot_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 slot_variable_node_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_variable_node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
  return false;
#undef DO_
}

void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 original_variable_node_id = 1;
  if (this->original_variable_node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->original_variable_node_id(), output);
  }

  // string slot_name = 2;
  if (this->slot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slot_name().data(), static_cast<int>(this->slot_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->slot_name(), output);
  }

  // int32 slot_variable_node_id = 3;
  if (this->slot_variable_node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->slot_variable_node_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
}

::google::protobuf::uint8* CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 original_variable_node_id = 1;
  if (this->original_variable_node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->original_variable_node_id(), target);
  }

  // string slot_name = 2;
  if (this->slot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slot_name().data(), static_cast<int>(this->slot_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->slot_name(), target);
  }

  // int32 slot_variable_node_id = 3;
  if (this->slot_variable_node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->slot_variable_node_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
  return target;
}

size_t CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string slot_name = 2;
  if (this->slot_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->slot_name());
  }

  // int32 original_variable_node_id = 1;
  if (this->original_variable_node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->original_variable_node_id());
  }

  // int32 slot_variable_node_id = 3;
  if (this->slot_variable_node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot_variable_node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
    MergeFrom(*source);
  }
}

void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::MergeFrom(const CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.slot_name().size() > 0) {
    set_slot_name(from.slot_name());
  }
  if (from.original_variable_node_id() != 0) {
    set_original_variable_node_id(from.original_variable_node_id());
  }
  if (from.slot_variable_node_id() != 0) {
    set_slot_variable_node_id(from.slot_variable_node_id());
  }
}

void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::CopyFrom(const CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::IsInitialized() const {
  return true;
}

void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::Swap(CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::UnsafeArenaSwap(CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::InternalSwap(CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* other) {
  using std::swap;
  slot_name_.Swap(&other->slot_name_);
  swap(original_variable_node_id_, other->original_variable_node_id_);
  swap(slot_variable_node_id_, other->slot_variable_node_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference

// int32 original_variable_node_id = 1;
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::clear_original_variable_node_id() {
  original_variable_node_id_ = 0;
}
::google::protobuf::int32 CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::original_variable_node_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.original_variable_node_id)
  return original_variable_node_id_;
}
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::set_original_variable_node_id(::google::protobuf::int32 value) {
  
  original_variable_node_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.original_variable_node_id)
}

// string slot_name = 2;
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::clear_slot_name() {
  slot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::slot_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_name)
  return slot_name_.Get();
}
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::set_slot_name(const ::std::string& value) {
  
  slot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_name)
}
#if LANG_CXX11
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::set_slot_name(::std::string&& value) {
  
  slot_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_name)
}
#endif
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::set_slot_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  slot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_name)
}
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::set_slot_name(const char* value,
    size_t size) {
  
  slot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_name)
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::mutable_slot_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_name)
  return slot_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::release_slot_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_name)
  
  return slot_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::unsafe_arena_release_slot_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return slot_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::set_allocated_slot_name(::std::string* slot_name) {
  if (slot_name != NULL) {
    
  } else {
    
  }
  slot_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), slot_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_name)
}
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::unsafe_arena_set_allocated_slot_name(
    ::std::string* slot_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (slot_name != NULL) {
    
  } else {
    
  }
  slot_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      slot_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_name)
}

// int32 slot_variable_node_id = 3;
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::clear_slot_variable_node_id() {
  slot_variable_node_id_ = 0;
}
::google::protobuf::int32 CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::slot_variable_node_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_variable_node_id)
  return slot_variable_node_id_;
}
void CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference::set_slot_variable_node_id(::google::protobuf::int32 value) {
  
  slot_variable_node_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.slot_variable_node_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckpointableObjectGraph_CheckpointableObject::kChildrenFieldNumber;
const int CheckpointableObjectGraph_CheckpointableObject::kAttributesFieldNumber;
const int CheckpointableObjectGraph_CheckpointableObject::kSlotVariablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckpointableObjectGraph_CheckpointableObject::CheckpointableObjectGraph_CheckpointableObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
}
CheckpointableObjectGraph_CheckpointableObject::CheckpointableObjectGraph_CheckpointableObject(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  children_(arena),
  attributes_(arena),
  slot_variables_(arena) {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
}
CheckpointableObjectGraph_CheckpointableObject::CheckpointableObjectGraph_CheckpointableObject(const CheckpointableObjectGraph_CheckpointableObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      children_(from.children_),
      attributes_(from.attributes_),
      slot_variables_(from.slot_variables_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
}

void CheckpointableObjectGraph_CheckpointableObject::SharedCtor() {
  _cached_size_ = 0;
}

CheckpointableObjectGraph_CheckpointableObject::~CheckpointableObjectGraph_CheckpointableObject() {
  // @@protoc_insertion_point(destructor:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
  SharedDtor();
}

void CheckpointableObjectGraph_CheckpointableObject::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void CheckpointableObjectGraph_CheckpointableObject::ArenaDtor(void* object) {
  CheckpointableObjectGraph_CheckpointableObject* _this = reinterpret_cast< CheckpointableObjectGraph_CheckpointableObject* >(object);
  (void)_this;
}
void CheckpointableObjectGraph_CheckpointableObject::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckpointableObjectGraph_CheckpointableObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckpointableObjectGraph_CheckpointableObject::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckpointableObjectGraph_CheckpointableObject& CheckpointableObjectGraph_CheckpointableObject::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckpointableObjectGraph_CheckpointableObject* CheckpointableObjectGraph_CheckpointableObject::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CheckpointableObjectGraph_CheckpointableObject>(arena);
}

void CheckpointableObjectGraph_CheckpointableObject::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  attributes_.Clear();
  slot_variables_.Clear();
  _internal_metadata_.Clear();
}

bool CheckpointableObjectGraph_CheckpointableObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_children()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slot_variables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
  return false;
#undef DO_
}

void CheckpointableObjectGraph_CheckpointableObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->children(static_cast<int>(i)), output);
  }

  // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attributes(static_cast<int>(i)), output);
  }

  // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_variables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->slot_variables(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
}

::google::protobuf::uint8* CheckpointableObjectGraph_CheckpointableObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->children(static_cast<int>(i)), deterministic, target);
  }

  // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_variables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->slot_variables(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
  return target;
}

size_t CheckpointableObjectGraph_CheckpointableObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->children_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->children(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attributes(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->slot_variables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->slot_variables(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckpointableObjectGraph_CheckpointableObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckpointableObjectGraph_CheckpointableObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckpointableObjectGraph_CheckpointableObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
    MergeFrom(*source);
  }
}

void CheckpointableObjectGraph_CheckpointableObject::MergeFrom(const CheckpointableObjectGraph_CheckpointableObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  attributes_.MergeFrom(from.attributes_);
  slot_variables_.MergeFrom(from.slot_variables_);
}

void CheckpointableObjectGraph_CheckpointableObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckpointableObjectGraph_CheckpointableObject::CopyFrom(const CheckpointableObjectGraph_CheckpointableObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckpointableObjectGraph_CheckpointableObject::IsInitialized() const {
  return true;
}

void CheckpointableObjectGraph_CheckpointableObject::Swap(CheckpointableObjectGraph_CheckpointableObject* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckpointableObjectGraph_CheckpointableObject* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckpointableObjectGraph_CheckpointableObject::UnsafeArenaSwap(CheckpointableObjectGraph_CheckpointableObject* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckpointableObjectGraph_CheckpointableObject::InternalSwap(CheckpointableObjectGraph_CheckpointableObject* other) {
  using std::swap;
  children_.InternalSwap(&other->children_);
  attributes_.InternalSwap(&other->attributes_);
  slot_variables_.InternalSwap(&other->slot_variables_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckpointableObjectGraph_CheckpointableObject::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckpointableObjectGraph_CheckpointableObject

// repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;
int CheckpointableObjectGraph_CheckpointableObject::children_size() const {
  return children_.size();
}
void CheckpointableObjectGraph_CheckpointableObject::clear_children() {
  children_.Clear();
}
const ::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference& CheckpointableObjectGraph_CheckpointableObject::children(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CheckpointableObjectGraph.CheckpointableObject.children)
  return children_.Get(index);
}
::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference* CheckpointableObjectGraph_CheckpointableObject::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.CheckpointableObjectGraph.CheckpointableObject.children)
  return children_.Mutable(index);
}
::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference* CheckpointableObjectGraph_CheckpointableObject::add_children() {
  // @@protoc_insertion_point(field_add:tensorflow.CheckpointableObjectGraph.CheckpointableObject.children)
  return children_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference >*
CheckpointableObjectGraph_CheckpointableObject::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CheckpointableObjectGraph.CheckpointableObject.children)
  return &children_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::CheckpointableObjectGraph_CheckpointableObject_ObjectReference >&
CheckpointableObjectGraph_CheckpointableObject::children() const {
  // @@protoc_insertion_point(field_list:tensorflow.CheckpointableObjectGraph.CheckpointableObject.children)
  return children_;
}

// repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;
int CheckpointableObjectGraph_CheckpointableObject::attributes_size() const {
  return attributes_.size();
}
void CheckpointableObjectGraph_CheckpointableObject::clear_attributes() {
  attributes_.Clear();
}
const ::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SerializedTensor& CheckpointableObjectGraph_CheckpointableObject::attributes(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CheckpointableObjectGraph.CheckpointableObject.attributes)
  return attributes_.Get(index);
}
::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SerializedTensor* CheckpointableObjectGraph_CheckpointableObject::mutable_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.CheckpointableObjectGraph.CheckpointableObject.attributes)
  return attributes_.Mutable(index);
}
::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SerializedTensor* CheckpointableObjectGraph_CheckpointableObject::add_attributes() {
  // @@protoc_insertion_point(field_add:tensorflow.CheckpointableObjectGraph.CheckpointableObject.attributes)
  return attributes_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SerializedTensor >*
CheckpointableObjectGraph_CheckpointableObject::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CheckpointableObjectGraph.CheckpointableObject.attributes)
  return &attributes_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SerializedTensor >&
CheckpointableObjectGraph_CheckpointableObject::attributes() const {
  // @@protoc_insertion_point(field_list:tensorflow.CheckpointableObjectGraph.CheckpointableObject.attributes)
  return attributes_;
}

// repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;
int CheckpointableObjectGraph_CheckpointableObject::slot_variables_size() const {
  return slot_variables_.size();
}
void CheckpointableObjectGraph_CheckpointableObject::clear_slot_variables() {
  slot_variables_.Clear();
}
const ::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference& CheckpointableObjectGraph_CheckpointableObject::slot_variables(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CheckpointableObjectGraph.CheckpointableObject.slot_variables)
  return slot_variables_.Get(index);
}
::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* CheckpointableObjectGraph_CheckpointableObject::mutable_slot_variables(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.CheckpointableObjectGraph.CheckpointableObject.slot_variables)
  return slot_variables_.Mutable(index);
}
::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference* CheckpointableObjectGraph_CheckpointableObject::add_slot_variables() {
  // @@protoc_insertion_point(field_add:tensorflow.CheckpointableObjectGraph.CheckpointableObject.slot_variables)
  return slot_variables_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference >*
CheckpointableObjectGraph_CheckpointableObject::mutable_slot_variables() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CheckpointableObjectGraph.CheckpointableObject.slot_variables)
  return &slot_variables_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference >&
CheckpointableObjectGraph_CheckpointableObject::slot_variables() const {
  // @@protoc_insertion_point(field_list:tensorflow.CheckpointableObjectGraph.CheckpointableObject.slot_variables)
  return slot_variables_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckpointableObjectGraph::kNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckpointableObjectGraph::CheckpointableObjectGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CheckpointableObjectGraph)
}
CheckpointableObjectGraph::CheckpointableObjectGraph(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  nodes_(arena) {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CheckpointableObjectGraph)
}
CheckpointableObjectGraph::CheckpointableObjectGraph(const CheckpointableObjectGraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CheckpointableObjectGraph)
}

void CheckpointableObjectGraph::SharedCtor() {
  _cached_size_ = 0;
}

CheckpointableObjectGraph::~CheckpointableObjectGraph() {
  // @@protoc_insertion_point(destructor:tensorflow.CheckpointableObjectGraph)
  SharedDtor();
}

void CheckpointableObjectGraph::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void CheckpointableObjectGraph::ArenaDtor(void* object) {
  CheckpointableObjectGraph* _this = reinterpret_cast< CheckpointableObjectGraph* >(object);
  (void)_this;
}
void CheckpointableObjectGraph::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckpointableObjectGraph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckpointableObjectGraph::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckpointableObjectGraph& CheckpointableObjectGraph::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckpointableObjectGraph* CheckpointableObjectGraph::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CheckpointableObjectGraph>(arena);
}

void CheckpointableObjectGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CheckpointableObjectGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  _internal_metadata_.Clear();
}

bool CheckpointableObjectGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CheckpointableObjectGraph)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CheckpointableObjectGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CheckpointableObjectGraph)
  return false;
#undef DO_
}

void CheckpointableObjectGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CheckpointableObjectGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodes(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CheckpointableObjectGraph)
}

::google::protobuf::uint8* CheckpointableObjectGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CheckpointableObjectGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CheckpointableObjectGraph)
  return target;
}

size_t CheckpointableObjectGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CheckpointableObjectGraph)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckpointableObjectGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CheckpointableObjectGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckpointableObjectGraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckpointableObjectGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CheckpointableObjectGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CheckpointableObjectGraph)
    MergeFrom(*source);
  }
}

void CheckpointableObjectGraph::MergeFrom(const CheckpointableObjectGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CheckpointableObjectGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
}

void CheckpointableObjectGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CheckpointableObjectGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckpointableObjectGraph::CopyFrom(const CheckpointableObjectGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CheckpointableObjectGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckpointableObjectGraph::IsInitialized() const {
  return true;
}

void CheckpointableObjectGraph::Swap(CheckpointableObjectGraph* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckpointableObjectGraph* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckpointableObjectGraph::UnsafeArenaSwap(CheckpointableObjectGraph* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckpointableObjectGraph::InternalSwap(CheckpointableObjectGraph* other) {
  using std::swap;
  nodes_.InternalSwap(&other->nodes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckpointableObjectGraph::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcheckpointable_5fobject_5fgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckpointableObjectGraph

// repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;
int CheckpointableObjectGraph::nodes_size() const {
  return nodes_.size();
}
void CheckpointableObjectGraph::clear_nodes() {
  nodes_.Clear();
}
const ::tensorflow::CheckpointableObjectGraph_CheckpointableObject& CheckpointableObjectGraph::nodes(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CheckpointableObjectGraph.nodes)
  return nodes_.Get(index);
}
::tensorflow::CheckpointableObjectGraph_CheckpointableObject* CheckpointableObjectGraph::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.CheckpointableObjectGraph.nodes)
  return nodes_.Mutable(index);
}
::tensorflow::CheckpointableObjectGraph_CheckpointableObject* CheckpointableObjectGraph::add_nodes() {
  // @@protoc_insertion_point(field_add:tensorflow.CheckpointableObjectGraph.nodes)
  return nodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::CheckpointableObjectGraph_CheckpointableObject >*
CheckpointableObjectGraph::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CheckpointableObjectGraph.nodes)
  return &nodes_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::CheckpointableObjectGraph_CheckpointableObject >&
CheckpointableObjectGraph::nodes() const {
  // @@protoc_insertion_point(field_list:tensorflow.CheckpointableObjectGraph.nodes)
  return nodes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
