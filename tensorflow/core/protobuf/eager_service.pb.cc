// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/eager_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/protobuf/eager_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
namespace eager {
class RemoteTensorHandleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RemoteTensorHandle>
     _instance;
} _RemoteTensorHandle_default_instance_;
class Operation_AttrsEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Operation::Operation_AttrsEntry>
     _instance;
} _Operation_AttrsEntry_default_instance_;
class OperationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Operation>
     _instance;
} _Operation_default_instance_;
class QueueItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QueueItem>
     _instance;
  const ::tensorflow::eager::RemoteTensorHandle* handle_to_decref_;
  const ::tensorflow::eager::Operation* operation_;
} _QueueItem_default_instance_;
class CreateContextRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateContextRequest>
     _instance;
} _CreateContextRequest_default_instance_;
class CreateContextResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateContextResponse>
     _instance;
} _CreateContextResponse_default_instance_;
class EnqueueRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnqueueRequest>
     _instance;
} _EnqueueRequest_default_instance_;
class EnqueueResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnqueueResponse>
     _instance;
} _EnqueueResponse_default_instance_;
class WaitQueueDoneRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WaitQueueDoneRequest>
     _instance;
} _WaitQueueDoneRequest_default_instance_;
class WaitQueueDoneResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WaitQueueDoneResponse>
     _instance;
} _WaitQueueDoneResponse_default_instance_;
class KeepAliveRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<KeepAliveRequest>
     _instance;
} _KeepAliveRequest_default_instance_;
class KeepAliveResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<KeepAliveResponse>
     _instance;
} _KeepAliveResponse_default_instance_;
class CloseContextRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CloseContextRequest>
     _instance;
} _CloseContextRequest_default_instance_;
class CloseContextResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CloseContextResponse>
     _instance;
} _CloseContextResponse_default_instance_;
class RegisterFunctionRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RegisterFunctionRequest>
     _instance;
} _RegisterFunctionRequest_default_instance_;
class RegisterFunctionResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RegisterFunctionResponse>
     _instance;
} _RegisterFunctionResponse_default_instance_;

namespace protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[16];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteTensorHandle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteTensorHandle, op_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteTensorHandle, output_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, control_op_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, attrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, device_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueItem, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueItem, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(QueueItemDefaultTypeInternal, handle_to_decref_),
  offsetof(QueueItemDefaultTypeInternal, operation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueItem, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateContextRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateContextRequest, server_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateContextRequest, async_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateContextRequest, keep_alive_secs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateContextRequest, version_def_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateContextResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateContextResponse, context_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateContextResponse, device_attributes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnqueueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnqueueRequest, context_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnqueueRequest, queue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnqueueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaitQueueDoneRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaitQueueDoneRequest, context_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaitQueueDoneRequest, op_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaitQueueDoneResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeepAliveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeepAliveRequest, context_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeepAliveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseContextRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseContextRequest, context_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseContextResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterFunctionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterFunctionRequest, context_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterFunctionRequest, function_def_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterFunctionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(RemoteTensorHandle)},
  { 7, -1, sizeof(Operation)},
  { 18, -1, sizeof(QueueItem)},
  { 26, -1, sizeof(CreateContextRequest)},
  { 35, -1, sizeof(CreateContextResponse)},
  { 42, -1, sizeof(EnqueueRequest)},
  { 49, -1, sizeof(EnqueueResponse)},
  { 54, -1, sizeof(WaitQueueDoneRequest)},
  { 61, -1, sizeof(WaitQueueDoneResponse)},
  { 66, -1, sizeof(KeepAliveRequest)},
  { 72, -1, sizeof(KeepAliveResponse)},
  { 77, -1, sizeof(CloseContextRequest)},
  { 83, -1, sizeof(CloseContextResponse)},
  { 88, -1, sizeof(RegisterFunctionRequest)},
  { 95, -1, sizeof(RegisterFunctionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoteTensorHandle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Operation_AttrsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Operation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueueItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateContextRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateContextResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnqueueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnqueueResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WaitQueueDoneRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WaitQueueDoneResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KeepAliveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KeepAliveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CloseContextRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CloseContextResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterFunctionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterFunctionResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tensorflow/core/protobuf/eager_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[1].reflection = Operation::Operation_AttrsEntry::CreateReflection(file_level_metadata[1].descriptor, _Operation_AttrsEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::InitDefaults();
  _RemoteTensorHandle_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RemoteTensorHandle_default_instance_);_Operation_AttrsEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Operation_AttrsEntry_default_instance_);_Operation_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Operation_default_instance_);_QueueItem_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QueueItem_default_instance_);_CreateContextRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateContextRequest_default_instance_);_CreateContextResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateContextResponse_default_instance_);_EnqueueRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnqueueRequest_default_instance_);_EnqueueResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnqueueResponse_default_instance_);_WaitQueueDoneRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WaitQueueDoneRequest_default_instance_);_WaitQueueDoneResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WaitQueueDoneResponse_default_instance_);_KeepAliveRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_KeepAliveRequest_default_instance_);_KeepAliveResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_KeepAliveResponse_default_instance_);_CloseContextRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CloseContextRequest_default_instance_);_CloseContextResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CloseContextResponse_default_instance_);_RegisterFunctionRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RegisterFunctionRequest_default_instance_);_RegisterFunctionResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RegisterFunctionResponse_default_instance_);_Operation_AttrsEntry_default_instance_._instance.get_mutable()->set_default_instance(_Operation_AttrsEntry_default_instance_._instance.get_mutable());
  _Operation_AttrsEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _QueueItem_default_instance_.handle_to_decref_ = const_cast< ::tensorflow::eager::RemoteTensorHandle*>(
      ::tensorflow::eager::RemoteTensorHandle::internal_default_instance());
  _QueueItem_default_instance_.operation_ = const_cast< ::tensorflow::eager::Operation*>(
      ::tensorflow::eager::Operation::internal_default_instance());
  _CreateContextRequest_default_instance_._instance.get_mutable()->server_def_ = const_cast< ::tensorflow::ServerDef*>(
      ::tensorflow::ServerDef::internal_default_instance());
  _CreateContextRequest_default_instance_._instance.get_mutable()->version_def_ = const_cast< ::tensorflow::VersionDef*>(
      ::tensorflow::VersionDef::internal_default_instance());
  _RegisterFunctionRequest_default_instance_._instance.get_mutable()->function_def_ = const_cast< ::tensorflow::FunctionDef*>(
      ::tensorflow::FunctionDef::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n,tensorflow/core/protobuf/eager_service"
      ".proto\022\020tensorflow.eager\032*tensorflow/cor"
      "e/framework/attr_value.proto\0321tensorflow"
      "/core/framework/device_attributes.proto\032"
      "(tensorflow/core/framework/function.prot"
      "o\032(tensorflow/core/framework/versions.pr"
      "oto\0320tensorflow/core/protobuf/tensorflow"
      "_server.proto\"7\n\022RemoteTensorHandle\022\r\n\005o"
      "p_id\030\001 \001(\003\022\022\n\noutput_num\030\002 \001(\005\"\377\001\n\tOpera"
      "tion\022\n\n\002id\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\0224\n\006inputs"
      "\030\003 \003(\0132$.tensorflow.eager.RemoteTensorHa"
      "ndle\022\026\n\016control_op_ids\030\004 \003(\003\0225\n\005attrs\030\005 "
      "\003(\0132&.tensorflow.eager.Operation.AttrsEn"
      "try\022\016\n\006device\030\006 \001(\t\032C\n\nAttrsEntry\022\013\n\003key"
      "\030\001 \001(\t\022$\n\005value\030\002 \001(\0132\025.tensorflow.AttrV"
      "alue:\0028\001\"\207\001\n\tQueueItem\022@\n\020handle_to_decr"
      "ef\030\001 \001(\0132$.tensorflow.eager.RemoteTensor"
      "HandleH\000\0220\n\toperation\030\002 \001(\0132\033.tensorflow"
      ".eager.OperationH\000B\006\n\004item\"\226\001\n\024CreateCon"
      "textRequest\022)\n\nserver_def\030\001 \001(\0132\025.tensor"
      "flow.ServerDef\022\r\n\005async\030\002 \001(\010\022\027\n\017keep_al"
      "ive_secs\030\003 \001(\003\022+\n\013version_def\030\004 \001(\0132\026.te"
      "nsorflow.VersionDef\"d\n\025CreateContextResp"
      "onse\022\022\n\ncontext_id\030\001 \001(\006\0227\n\021device_attri"
      "butes\030\002 \003(\0132\034.tensorflow.DeviceAttribute"
      "s\"P\n\016EnqueueRequest\022\022\n\ncontext_id\030\001 \001(\006\022"
      "*\n\005queue\030\003 \003(\0132\033.tensorflow.eager.QueueI"
      "tem\"\021\n\017EnqueueResponse\"9\n\024WaitQueueDoneR"
      "equest\022\022\n\ncontext_id\030\001 \001(\006\022\r\n\005op_id\030\002 \003("
      "\003\"\027\n\025WaitQueueDoneResponse\"&\n\020KeepAliveR"
      "equest\022\022\n\ncontext_id\030\001 \001(\006\"\023\n\021KeepAliveR"
      "esponse\")\n\023CloseContextRequest\022\022\n\ncontex"
      "t_id\030\001 \001(\006\"\026\n\024CloseContextResponse\"\\\n\027Re"
      "gisterFunctionRequest\022\022\n\ncontext_id\030\001 \001("
      "\006\022-\n\014function_def\030\002 \001(\0132\027.tensorflow.Fun"
      "ctionDef\"\032\n\030RegisterFunctionResponse2\302\004\n"
      "\014EagerService\022`\n\rCreateContext\022&.tensorf"
      "low.eager.CreateContextRequest\032\'.tensorf"
      "low.eager.CreateContextResponse\022N\n\007Enque"
      "ue\022 .tensorflow.eager.EnqueueRequest\032!.t"
      "ensorflow.eager.EnqueueResponse\022`\n\rWaitQ"
      "ueueDone\022&.tensorflow.eager.WaitQueueDon"
      "eRequest\032\'.tensorflow.eager.WaitQueueDon"
      "eResponse\022T\n\tKeepAlive\022\".tensorflow.eage"
      "r.KeepAliveRequest\032#.tensorflow.eager.Ke"
      "epAliveResponse\022]\n\014CloseContext\022%.tensor"
      "flow.eager.CloseContextRequest\032&.tensorf"
      "low.eager.CloseContextResponse\022i\n\020Regist"
      "erFunction\022).tensorflow.eager.RegisterFu"
      "nctionRequest\032*.tensorflow.eager.Registe"
      "rFunctionResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2025);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/eager_service.proto", &protobuf_RegisterTypes);
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoteTensorHandle::kOpIdFieldNumber;
const int RemoteTensorHandle::kOutputNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoteTensorHandle::RemoteTensorHandle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.RemoteTensorHandle)
}
RemoteTensorHandle::RemoteTensorHandle(const RemoteTensorHandle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&op_id_, &from.op_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&output_num_) -
    reinterpret_cast<char*>(&op_id_)) + sizeof(output_num_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.RemoteTensorHandle)
}

void RemoteTensorHandle::SharedCtor() {
  ::memset(&op_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_num_) -
      reinterpret_cast<char*>(&op_id_)) + sizeof(output_num_));
  _cached_size_ = 0;
}

RemoteTensorHandle::~RemoteTensorHandle() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.RemoteTensorHandle)
  SharedDtor();
}

void RemoteTensorHandle::SharedDtor() {
}

void RemoteTensorHandle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoteTensorHandle::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoteTensorHandle& RemoteTensorHandle::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoteTensorHandle* RemoteTensorHandle::New(::google::protobuf::Arena* arena) const {
  RemoteTensorHandle* n = new RemoteTensorHandle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoteTensorHandle::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.RemoteTensorHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&op_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_num_) -
      reinterpret_cast<char*>(&op_id_)) + sizeof(output_num_));
  _internal_metadata_.Clear();
}

bool RemoteTensorHandle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.RemoteTensorHandle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 op_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &op_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 output_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &output_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.RemoteTensorHandle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.RemoteTensorHandle)
  return false;
#undef DO_
}

void RemoteTensorHandle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.RemoteTensorHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 op_id = 1;
  if (this->op_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->op_id(), output);
  }

  // int32 output_num = 2;
  if (this->output_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->output_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.RemoteTensorHandle)
}

::google::protobuf::uint8* RemoteTensorHandle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.RemoteTensorHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 op_id = 1;
  if (this->op_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->op_id(), target);
  }

  // int32 output_num = 2;
  if (this->output_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->output_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.RemoteTensorHandle)
  return target;
}

size_t RemoteTensorHandle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.RemoteTensorHandle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 op_id = 1;
  if (this->op_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->op_id());
  }

  // int32 output_num = 2;
  if (this->output_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->output_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoteTensorHandle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.RemoteTensorHandle)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoteTensorHandle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoteTensorHandle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.RemoteTensorHandle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.RemoteTensorHandle)
    MergeFrom(*source);
  }
}

void RemoteTensorHandle::MergeFrom(const RemoteTensorHandle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.RemoteTensorHandle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.op_id() != 0) {
    set_op_id(from.op_id());
  }
  if (from.output_num() != 0) {
    set_output_num(from.output_num());
  }
}

void RemoteTensorHandle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.RemoteTensorHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoteTensorHandle::CopyFrom(const RemoteTensorHandle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.RemoteTensorHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoteTensorHandle::IsInitialized() const {
  return true;
}

void RemoteTensorHandle::Swap(RemoteTensorHandle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoteTensorHandle::InternalSwap(RemoteTensorHandle* other) {
  using std::swap;
  swap(op_id_, other->op_id_);
  swap(output_num_, other->output_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoteTensorHandle::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoteTensorHandle

// int64 op_id = 1;
void RemoteTensorHandle::clear_op_id() {
  op_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RemoteTensorHandle::op_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.RemoteTensorHandle.op_id)
  return op_id_;
}
void RemoteTensorHandle::set_op_id(::google::protobuf::int64 value) {
  
  op_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.eager.RemoteTensorHandle.op_id)
}

// int32 output_num = 2;
void RemoteTensorHandle::clear_output_num() {
  output_num_ = 0;
}
::google::protobuf::int32 RemoteTensorHandle::output_num() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.RemoteTensorHandle.output_num)
  return output_num_;
}
void RemoteTensorHandle::set_output_num(::google::protobuf::int32 value) {
  
  output_num_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.eager.RemoteTensorHandle.output_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Operation::Operation_AttrsEntry::Operation_AttrsEntry() {}
Operation::Operation_AttrsEntry::Operation_AttrsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Operation::Operation_AttrsEntry::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[1];
}
void Operation::Operation_AttrsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Operation::Operation_AttrsEntry::MergeFrom(const Operation_AttrsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Operation::kIdFieldNumber;
const int Operation::kNameFieldNumber;
const int Operation::kInputsFieldNumber;
const int Operation::kControlOpIdsFieldNumber;
const int Operation::kAttrsFieldNumber;
const int Operation::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Operation::Operation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.Operation)
}
Operation::Operation(const Operation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      inputs_(from.inputs_),
      control_op_ids_(from.control_op_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attrs_.MergeFrom(from.attrs_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device().size() > 0) {
    device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.Operation)
}

void Operation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.Operation)
  SharedDtor();
}

void Operation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Operation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Operation::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Operation& Operation::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Operation* Operation::New(::google::protobuf::Arena* arena) const {
  Operation* n = new Operation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  control_op_ids_.Clear();
  attrs_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Operation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.Operation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.eager.Operation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.eager.RemoteTensorHandle inputs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 control_op_ids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_control_op_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_control_op_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .tensorflow.AttrValue> attrs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          Operation_AttrsEntry::Parser< ::google::protobuf::internal::MapField<
              Operation_AttrsEntry,
              ::std::string, ::tensorflow::AttrValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue > > parser(&attrs_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.eager.Operation.AttrsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device().data(), static_cast<int>(this->device().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.eager.Operation.device"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.Operation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.Operation)
  return false;
#undef DO_
}

void Operation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.eager.Operation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .tensorflow.eager.RemoteTensorHandle inputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->inputs(static_cast<int>(i)), output);
  }

  // repeated int64 control_op_ids = 4;
  if (this->control_op_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _control_op_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->control_op_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->control_op_ids(i), output);
  }

  // map<string, .tensorflow.AttrValue> attrs = 5;
  if (!this->attrs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.eager.Operation.AttrsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->attrs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->attrs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >::const_iterator
          it = this->attrs().begin();
          it != this->attrs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Operation_AttrsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attrs_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Operation_AttrsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >::const_iterator
          it = this->attrs().begin();
          it != this->attrs().end(); ++it) {
        entry.reset(attrs_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string device = 6;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.eager.Operation.device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->device(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.Operation)
}

::google::protobuf::uint8* Operation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.eager.Operation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .tensorflow.eager.RemoteTensorHandle inputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->inputs(static_cast<int>(i)), deterministic, target);
  }

  // repeated int64 control_op_ids = 4;
  if (this->control_op_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _control_op_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->control_op_ids_, target);
  }

  // map<string, .tensorflow.AttrValue> attrs = 5;
  if (!this->attrs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.eager.Operation.AttrsEntry.key");
      }
    };

    if (deterministic &&
        this->attrs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->attrs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >::const_iterator
          it = this->attrs().begin();
          it != this->attrs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Operation_AttrsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attrs_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Operation_AttrsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >::const_iterator
          it = this->attrs().begin();
          it != this->attrs().end(); ++it) {
        entry.reset(attrs_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string device = 6;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.eager.Operation.device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->device(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.Operation)
  return target;
}

size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.Operation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.eager.RemoteTensorHandle inputs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inputs(static_cast<int>(i)));
    }
  }

  // repeated int64 control_op_ids = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->control_op_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _control_op_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<string, .tensorflow.AttrValue> attrs = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attrs_size());
  {
    ::google::protobuf::scoped_ptr<Operation_AttrsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >::const_iterator
        it = this->attrs().begin();
        it != this->attrs().end(); ++it) {
      entry.reset(attrs_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string device = 6;
  if (this->device().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Operation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  const Operation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Operation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.Operation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.Operation)
    MergeFrom(*source);
  }
}

void Operation::MergeFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  control_op_ids_.MergeFrom(from.control_op_ids_);
  attrs_.MergeFrom(from.attrs_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.device().size() > 0) {

    device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Operation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  return true;
}

void Operation::Swap(Operation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Operation::InternalSwap(Operation* other) {
  using std::swap;
  inputs_.InternalSwap(&other->inputs_);
  control_op_ids_.InternalSwap(&other->control_op_ids_);
  attrs_.Swap(&other->attrs_);
  name_.Swap(&other->name_);
  device_.Swap(&other->device_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Operation::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Operation

// int64 id = 1;
void Operation::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Operation::id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.id)
  return id_;
}
void Operation::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.eager.Operation.id)
}

// string name = 2;
void Operation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Operation::name() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.name)
  return name_.GetNoArena();
}
void Operation::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.Operation.name)
}
#if LANG_CXX11
void Operation::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.eager.Operation.name)
}
#endif
void Operation::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.eager.Operation.name)
}
void Operation::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.eager.Operation.name)
}
::std::string* Operation::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.Operation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Operation::release_name() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.Operation.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Operation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.Operation.name)
}

// repeated .tensorflow.eager.RemoteTensorHandle inputs = 3;
int Operation::inputs_size() const {
  return inputs_.size();
}
void Operation::clear_inputs() {
  inputs_.Clear();
}
const ::tensorflow::eager::RemoteTensorHandle& Operation::inputs(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.inputs)
  return inputs_.Get(index);
}
::tensorflow::eager::RemoteTensorHandle* Operation::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.Operation.inputs)
  return inputs_.Mutable(index);
}
::tensorflow::eager::RemoteTensorHandle* Operation::add_inputs() {
  // @@protoc_insertion_point(field_add:tensorflow.eager.Operation.inputs)
  return inputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::eager::RemoteTensorHandle >*
Operation::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.Operation.inputs)
  return &inputs_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::eager::RemoteTensorHandle >&
Operation::inputs() const {
  // @@protoc_insertion_point(field_list:tensorflow.eager.Operation.inputs)
  return inputs_;
}

// repeated int64 control_op_ids = 4;
int Operation::control_op_ids_size() const {
  return control_op_ids_.size();
}
void Operation::clear_control_op_ids() {
  control_op_ids_.Clear();
}
::google::protobuf::int64 Operation::control_op_ids(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.control_op_ids)
  return control_op_ids_.Get(index);
}
void Operation::set_control_op_ids(int index, ::google::protobuf::int64 value) {
  control_op_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.Operation.control_op_ids)
}
void Operation::add_control_op_ids(::google::protobuf::int64 value) {
  control_op_ids_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.eager.Operation.control_op_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Operation::control_op_ids() const {
  // @@protoc_insertion_point(field_list:tensorflow.eager.Operation.control_op_ids)
  return control_op_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Operation::mutable_control_op_ids() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.Operation.control_op_ids)
  return &control_op_ids_;
}

// map<string, .tensorflow.AttrValue> attrs = 5;
int Operation::attrs_size() const {
  return attrs_.size();
}
void Operation::clear_attrs() {
  attrs_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >&
Operation::attrs() const {
  // @@protoc_insertion_point(field_map:tensorflow.eager.Operation.attrs)
  return attrs_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >*
Operation::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.eager.Operation.attrs)
  return attrs_.MutableMap();
}

// string device = 6;
void Operation::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Operation::device() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.device)
  return device_.GetNoArena();
}
void Operation::set_device(const ::std::string& value) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.Operation.device)
}
#if LANG_CXX11
void Operation::set_device(::std::string&& value) {
  
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.eager.Operation.device)
}
#endif
void Operation::set_device(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.eager.Operation.device)
}
void Operation::set_device(const char* value, size_t size) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.eager.Operation.device)
}
::std::string* Operation::mutable_device() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.Operation.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Operation::release_device() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.Operation.device)
  
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Operation::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    
  } else {
    
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.Operation.device)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueueItem::kHandleToDecrefFieldNumber;
const int QueueItem::kOperationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueueItem::QueueItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.QueueItem)
}
QueueItem::QueueItem(const QueueItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_item();
  switch (from.item_case()) {
    case kHandleToDecref: {
      mutable_handle_to_decref()->::tensorflow::eager::RemoteTensorHandle::MergeFrom(from.handle_to_decref());
      break;
    }
    case kOperation: {
      mutable_operation()->::tensorflow::eager::Operation::MergeFrom(from.operation());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.QueueItem)
}

void QueueItem::SharedCtor() {
  clear_has_item();
  _cached_size_ = 0;
}

QueueItem::~QueueItem() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.QueueItem)
  SharedDtor();
}

void QueueItem::SharedDtor() {
  if (has_item()) {
    clear_item();
  }
}

void QueueItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueueItem::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueueItem& QueueItem::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueueItem* QueueItem::New(::google::protobuf::Arena* arena) const {
  QueueItem* n = new QueueItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueueItem::clear_item() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.eager.QueueItem)
  switch (item_case()) {
    case kHandleToDecref: {
      delete item_.handle_to_decref_;
      break;
    }
    case kOperation: {
      delete item_.operation_;
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ITEM_NOT_SET;
}


void QueueItem::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.QueueItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_item();
  _internal_metadata_.Clear();
}

bool QueueItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.QueueItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.eager.RemoteTensorHandle handle_to_decref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_handle_to_decref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.eager.Operation operation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_operation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.QueueItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.QueueItem)
  return false;
#undef DO_
}

void QueueItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.QueueItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.eager.RemoteTensorHandle handle_to_decref = 1;
  if (has_handle_to_decref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *item_.handle_to_decref_, output);
  }

  // .tensorflow.eager.Operation operation = 2;
  if (has_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *item_.operation_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.QueueItem)
}

::google::protobuf::uint8* QueueItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.QueueItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.eager.RemoteTensorHandle handle_to_decref = 1;
  if (has_handle_to_decref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *item_.handle_to_decref_, deterministic, target);
  }

  // .tensorflow.eager.Operation operation = 2;
  if (has_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *item_.operation_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.QueueItem)
  return target;
}

size_t QueueItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.QueueItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (item_case()) {
    // .tensorflow.eager.RemoteTensorHandle handle_to_decref = 1;
    case kHandleToDecref: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *item_.handle_to_decref_);
      break;
    }
    // .tensorflow.eager.Operation operation = 2;
    case kOperation: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *item_.operation_);
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueueItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.QueueItem)
  GOOGLE_DCHECK_NE(&from, this);
  const QueueItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueueItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.QueueItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.QueueItem)
    MergeFrom(*source);
  }
}

void QueueItem::MergeFrom(const QueueItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.QueueItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.item_case()) {
    case kHandleToDecref: {
      mutable_handle_to_decref()->::tensorflow::eager::RemoteTensorHandle::MergeFrom(from.handle_to_decref());
      break;
    }
    case kOperation: {
      mutable_operation()->::tensorflow::eager::Operation::MergeFrom(from.operation());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
}

void QueueItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.QueueItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueueItem::CopyFrom(const QueueItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.QueueItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueueItem::IsInitialized() const {
  return true;
}

void QueueItem::Swap(QueueItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueueItem::InternalSwap(QueueItem* other) {
  using std::swap;
  swap(item_, other->item_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueueItem::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueueItem

// .tensorflow.eager.RemoteTensorHandle handle_to_decref = 1;
bool QueueItem::has_handle_to_decref() const {
  return item_case() == kHandleToDecref;
}
void QueueItem::set_has_handle_to_decref() {
  _oneof_case_[0] = kHandleToDecref;
}
void QueueItem::clear_handle_to_decref() {
  if (has_handle_to_decref()) {
    delete item_.handle_to_decref_;
    clear_has_item();
  }
}
 const ::tensorflow::eager::RemoteTensorHandle& QueueItem::handle_to_decref() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.QueueItem.handle_to_decref)
  return has_handle_to_decref()
      ? *item_.handle_to_decref_
      : ::tensorflow::eager::RemoteTensorHandle::default_instance();
}
::tensorflow::eager::RemoteTensorHandle* QueueItem::mutable_handle_to_decref() {
  if (!has_handle_to_decref()) {
    clear_item();
    set_has_handle_to_decref();
    item_.handle_to_decref_ = new ::tensorflow::eager::RemoteTensorHandle;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.QueueItem.handle_to_decref)
  return item_.handle_to_decref_;
}
::tensorflow::eager::RemoteTensorHandle* QueueItem::release_handle_to_decref() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.QueueItem.handle_to_decref)
  if (has_handle_to_decref()) {
    clear_has_item();
    ::tensorflow::eager::RemoteTensorHandle* temp = item_.handle_to_decref_;
    item_.handle_to_decref_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void QueueItem::set_allocated_handle_to_decref(::tensorflow::eager::RemoteTensorHandle* handle_to_decref) {
  clear_item();
  if (handle_to_decref) {
    set_has_handle_to_decref();
    item_.handle_to_decref_ = handle_to_decref;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.QueueItem.handle_to_decref)
}

// .tensorflow.eager.Operation operation = 2;
bool QueueItem::has_operation() const {
  return item_case() == kOperation;
}
void QueueItem::set_has_operation() {
  _oneof_case_[0] = kOperation;
}
void QueueItem::clear_operation() {
  if (has_operation()) {
    delete item_.operation_;
    clear_has_item();
  }
}
 const ::tensorflow::eager::Operation& QueueItem::operation() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.QueueItem.operation)
  return has_operation()
      ? *item_.operation_
      : ::tensorflow::eager::Operation::default_instance();
}
::tensorflow::eager::Operation* QueueItem::mutable_operation() {
  if (!has_operation()) {
    clear_item();
    set_has_operation();
    item_.operation_ = new ::tensorflow::eager::Operation;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.QueueItem.operation)
  return item_.operation_;
}
::tensorflow::eager::Operation* QueueItem::release_operation() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.QueueItem.operation)
  if (has_operation()) {
    clear_has_item();
    ::tensorflow::eager::Operation* temp = item_.operation_;
    item_.operation_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void QueueItem::set_allocated_operation(::tensorflow::eager::Operation* operation) {
  clear_item();
  if (operation) {
    set_has_operation();
    item_.operation_ = operation;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.QueueItem.operation)
}

bool QueueItem::has_item() const {
  return item_case() != ITEM_NOT_SET;
}
void QueueItem::clear_has_item() {
  _oneof_case_[0] = ITEM_NOT_SET;
}
QueueItem::ItemCase QueueItem::item_case() const {
  return QueueItem::ItemCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateContextRequest::kServerDefFieldNumber;
const int CreateContextRequest::kAsyncFieldNumber;
const int CreateContextRequest::kKeepAliveSecsFieldNumber;
const int CreateContextRequest::kVersionDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateContextRequest::CreateContextRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.CreateContextRequest)
}
CreateContextRequest::CreateContextRequest(const CreateContextRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_server_def()) {
    server_def_ = new ::tensorflow::ServerDef(*from.server_def_);
  } else {
    server_def_ = NULL;
  }
  if (from.has_version_def()) {
    version_def_ = new ::tensorflow::VersionDef(*from.version_def_);
  } else {
    version_def_ = NULL;
  }
  ::memcpy(&keep_alive_secs_, &from.keep_alive_secs_,
    static_cast<size_t>(reinterpret_cast<char*>(&async_) -
    reinterpret_cast<char*>(&keep_alive_secs_)) + sizeof(async_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.CreateContextRequest)
}

void CreateContextRequest::SharedCtor() {
  ::memset(&server_def_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&async_) -
      reinterpret_cast<char*>(&server_def_)) + sizeof(async_));
  _cached_size_ = 0;
}

CreateContextRequest::~CreateContextRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.CreateContextRequest)
  SharedDtor();
}

void CreateContextRequest::SharedDtor() {
  if (this != internal_default_instance()) delete server_def_;
  if (this != internal_default_instance()) delete version_def_;
}

void CreateContextRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateContextRequest::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateContextRequest& CreateContextRequest::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateContextRequest* CreateContextRequest::New(::google::protobuf::Arena* arena) const {
  CreateContextRequest* n = new CreateContextRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateContextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.CreateContextRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && server_def_ != NULL) {
    delete server_def_;
  }
  server_def_ = NULL;
  if (GetArenaNoVirtual() == NULL && version_def_ != NULL) {
    delete version_def_;
  }
  version_def_ = NULL;
  ::memset(&keep_alive_secs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&async_) -
      reinterpret_cast<char*>(&keep_alive_secs_)) + sizeof(async_));
  _internal_metadata_.Clear();
}

bool CreateContextRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.CreateContextRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.ServerDef server_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_server_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool async = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &async_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 keep_alive_secs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &keep_alive_secs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.VersionDef version_def = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_version_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.CreateContextRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.CreateContextRequest)
  return false;
#undef DO_
}

void CreateContextRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.CreateContextRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.ServerDef server_def = 1;
  if (this->has_server_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->server_def_, output);
  }

  // bool async = 2;
  if (this->async() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->async(), output);
  }

  // int64 keep_alive_secs = 3;
  if (this->keep_alive_secs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->keep_alive_secs(), output);
  }

  // .tensorflow.VersionDef version_def = 4;
  if (this->has_version_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->version_def_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.CreateContextRequest)
}

::google::protobuf::uint8* CreateContextRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.CreateContextRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.ServerDef server_def = 1;
  if (this->has_server_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->server_def_, deterministic, target);
  }

  // bool async = 2;
  if (this->async() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->async(), target);
  }

  // int64 keep_alive_secs = 3;
  if (this->keep_alive_secs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->keep_alive_secs(), target);
  }

  // .tensorflow.VersionDef version_def = 4;
  if (this->has_version_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->version_def_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.CreateContextRequest)
  return target;
}

size_t CreateContextRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.CreateContextRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.ServerDef server_def = 1;
  if (this->has_server_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->server_def_);
  }

  // .tensorflow.VersionDef version_def = 4;
  if (this->has_version_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->version_def_);
  }

  // int64 keep_alive_secs = 3;
  if (this->keep_alive_secs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->keep_alive_secs());
  }

  // bool async = 2;
  if (this->async() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateContextRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.CreateContextRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateContextRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateContextRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.CreateContextRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.CreateContextRequest)
    MergeFrom(*source);
  }
}

void CreateContextRequest::MergeFrom(const CreateContextRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.CreateContextRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server_def()) {
    mutable_server_def()->::tensorflow::ServerDef::MergeFrom(from.server_def());
  }
  if (from.has_version_def()) {
    mutable_version_def()->::tensorflow::VersionDef::MergeFrom(from.version_def());
  }
  if (from.keep_alive_secs() != 0) {
    set_keep_alive_secs(from.keep_alive_secs());
  }
  if (from.async() != 0) {
    set_async(from.async());
  }
}

void CreateContextRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.CreateContextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateContextRequest::CopyFrom(const CreateContextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.CreateContextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateContextRequest::IsInitialized() const {
  return true;
}

void CreateContextRequest::Swap(CreateContextRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateContextRequest::InternalSwap(CreateContextRequest* other) {
  using std::swap;
  swap(server_def_, other->server_def_);
  swap(version_def_, other->version_def_);
  swap(keep_alive_secs_, other->keep_alive_secs_);
  swap(async_, other->async_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateContextRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateContextRequest

// .tensorflow.ServerDef server_def = 1;
bool CreateContextRequest::has_server_def() const {
  return this != internal_default_instance() && server_def_ != NULL;
}
void CreateContextRequest::clear_server_def() {
  if (GetArenaNoVirtual() == NULL && server_def_ != NULL) delete server_def_;
  server_def_ = NULL;
}
const ::tensorflow::ServerDef& CreateContextRequest::server_def() const {
  const ::tensorflow::ServerDef* p = server_def_;
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextRequest.server_def)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::ServerDef*>(
      &::tensorflow::_ServerDef_default_instance_);
}
::tensorflow::ServerDef* CreateContextRequest::mutable_server_def() {
  
  if (server_def_ == NULL) {
    server_def_ = new ::tensorflow::ServerDef;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.CreateContextRequest.server_def)
  return server_def_;
}
::tensorflow::ServerDef* CreateContextRequest::release_server_def() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.CreateContextRequest.server_def)
  
  ::tensorflow::ServerDef* temp = server_def_;
  server_def_ = NULL;
  return temp;
}
void CreateContextRequest::set_allocated_server_def(::tensorflow::ServerDef* server_def) {
  delete server_def_;
  if (server_def != NULL && server_def->GetArena() != NULL) {
    ::tensorflow::ServerDef* new_server_def = new ::tensorflow::ServerDef;
    new_server_def->CopyFrom(*server_def);
    server_def = new_server_def;
  }
  server_def_ = server_def;
  if (server_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.CreateContextRequest.server_def)
}

// bool async = 2;
void CreateContextRequest::clear_async() {
  async_ = false;
}
bool CreateContextRequest::async() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextRequest.async)
  return async_;
}
void CreateContextRequest::set_async(bool value) {
  
  async_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.eager.CreateContextRequest.async)
}

// int64 keep_alive_secs = 3;
void CreateContextRequest::clear_keep_alive_secs() {
  keep_alive_secs_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CreateContextRequest::keep_alive_secs() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextRequest.keep_alive_secs)
  return keep_alive_secs_;
}
void CreateContextRequest::set_keep_alive_secs(::google::protobuf::int64 value) {
  
  keep_alive_secs_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.eager.CreateContextRequest.keep_alive_secs)
}

// .tensorflow.VersionDef version_def = 4;
bool CreateContextRequest::has_version_def() const {
  return this != internal_default_instance() && version_def_ != NULL;
}
void CreateContextRequest::clear_version_def() {
  if (GetArenaNoVirtual() == NULL && version_def_ != NULL) delete version_def_;
  version_def_ = NULL;
}
const ::tensorflow::VersionDef& CreateContextRequest::version_def() const {
  const ::tensorflow::VersionDef* p = version_def_;
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextRequest.version_def)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::VersionDef*>(
      &::tensorflow::_VersionDef_default_instance_);
}
::tensorflow::VersionDef* CreateContextRequest::mutable_version_def() {
  
  if (version_def_ == NULL) {
    version_def_ = new ::tensorflow::VersionDef;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.CreateContextRequest.version_def)
  return version_def_;
}
::tensorflow::VersionDef* CreateContextRequest::release_version_def() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.CreateContextRequest.version_def)
  
  ::tensorflow::VersionDef* temp = version_def_;
  version_def_ = NULL;
  return temp;
}
void CreateContextRequest::set_allocated_version_def(::tensorflow::VersionDef* version_def) {
  delete version_def_;
  if (version_def != NULL && version_def->GetArena() != NULL) {
    ::tensorflow::VersionDef* new_version_def = new ::tensorflow::VersionDef;
    new_version_def->CopyFrom(*version_def);
    version_def = new_version_def;
  }
  version_def_ = version_def;
  if (version_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.CreateContextRequest.version_def)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateContextResponse::kContextIdFieldNumber;
const int CreateContextResponse::kDeviceAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateContextResponse::CreateContextResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.CreateContextResponse)
}
CreateContextResponse::CreateContextResponse(const CreateContextResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      device_attributes_(from.device_attributes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_id_ = from.context_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.CreateContextResponse)
}

void CreateContextResponse::SharedCtor() {
  context_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

CreateContextResponse::~CreateContextResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.CreateContextResponse)
  SharedDtor();
}

void CreateContextResponse::SharedDtor() {
}

void CreateContextResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateContextResponse::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateContextResponse& CreateContextResponse::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateContextResponse* CreateContextResponse::New(::google::protobuf::Arena* arena) const {
  CreateContextResponse* n = new CreateContextResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateContextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.CreateContextResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_attributes_.Clear();
  context_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool CreateContextResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.CreateContextResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 context_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &context_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.DeviceAttributes device_attributes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_device_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.CreateContextResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.CreateContextResponse)
  return false;
#undef DO_
}

void CreateContextResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.CreateContextResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->context_id(), output);
  }

  // repeated .tensorflow.DeviceAttributes device_attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->device_attributes(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.CreateContextResponse)
}

::google::protobuf::uint8* CreateContextResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.CreateContextResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->context_id(), target);
  }

  // repeated .tensorflow.DeviceAttributes device_attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->device_attributes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.CreateContextResponse)
  return target;
}

size_t CreateContextResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.CreateContextResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.DeviceAttributes device_attributes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->device_attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->device_attributes(static_cast<int>(i)));
    }
  }

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateContextResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.CreateContextResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateContextResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateContextResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.CreateContextResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.CreateContextResponse)
    MergeFrom(*source);
  }
}

void CreateContextResponse::MergeFrom(const CreateContextResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.CreateContextResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_attributes_.MergeFrom(from.device_attributes_);
  if (from.context_id() != 0) {
    set_context_id(from.context_id());
  }
}

void CreateContextResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.CreateContextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateContextResponse::CopyFrom(const CreateContextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.CreateContextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateContextResponse::IsInitialized() const {
  return true;
}

void CreateContextResponse::Swap(CreateContextResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateContextResponse::InternalSwap(CreateContextResponse* other) {
  using std::swap;
  device_attributes_.InternalSwap(&other->device_attributes_);
  swap(context_id_, other->context_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateContextResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateContextResponse

// fixed64 context_id = 1;
void CreateContextResponse::clear_context_id() {
  context_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CreateContextResponse::context_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextResponse.context_id)
  return context_id_;
}
void CreateContextResponse::set_context_id(::google::protobuf::uint64 value) {
  
  context_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.eager.CreateContextResponse.context_id)
}

// repeated .tensorflow.DeviceAttributes device_attributes = 2;
int CreateContextResponse::device_attributes_size() const {
  return device_attributes_.size();
}
void CreateContextResponse::clear_device_attributes() {
  device_attributes_.Clear();
}
const ::tensorflow::DeviceAttributes& CreateContextResponse::device_attributes(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextResponse.device_attributes)
  return device_attributes_.Get(index);
}
::tensorflow::DeviceAttributes* CreateContextResponse::mutable_device_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.CreateContextResponse.device_attributes)
  return device_attributes_.Mutable(index);
}
::tensorflow::DeviceAttributes* CreateContextResponse::add_device_attributes() {
  // @@protoc_insertion_point(field_add:tensorflow.eager.CreateContextResponse.device_attributes)
  return device_attributes_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::DeviceAttributes >*
CreateContextResponse::mutable_device_attributes() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.CreateContextResponse.device_attributes)
  return &device_attributes_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::DeviceAttributes >&
CreateContextResponse::device_attributes() const {
  // @@protoc_insertion_point(field_list:tensorflow.eager.CreateContextResponse.device_attributes)
  return device_attributes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnqueueRequest::kContextIdFieldNumber;
const int EnqueueRequest::kQueueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnqueueRequest::EnqueueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.EnqueueRequest)
}
EnqueueRequest::EnqueueRequest(const EnqueueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      queue_(from.queue_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_id_ = from.context_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.EnqueueRequest)
}

void EnqueueRequest::SharedCtor() {
  context_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

EnqueueRequest::~EnqueueRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.EnqueueRequest)
  SharedDtor();
}

void EnqueueRequest::SharedDtor() {
}

void EnqueueRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnqueueRequest::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnqueueRequest& EnqueueRequest::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnqueueRequest* EnqueueRequest::New(::google::protobuf::Arena* arena) const {
  EnqueueRequest* n = new EnqueueRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnqueueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.EnqueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  queue_.Clear();
  context_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool EnqueueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.EnqueueRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 context_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &context_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.eager.QueueItem queue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_queue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.EnqueueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.EnqueueRequest)
  return false;
#undef DO_
}

void EnqueueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.EnqueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->context_id(), output);
  }

  // repeated .tensorflow.eager.QueueItem queue = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queue_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->queue(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.EnqueueRequest)
}

::google::protobuf::uint8* EnqueueRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.EnqueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->context_id(), target);
  }

  // repeated .tensorflow.eager.QueueItem queue = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queue_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->queue(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.EnqueueRequest)
  return target;
}

size_t EnqueueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.EnqueueRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.eager.QueueItem queue = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->queue_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queue(static_cast<int>(i)));
    }
  }

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnqueueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.EnqueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EnqueueRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnqueueRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.EnqueueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.EnqueueRequest)
    MergeFrom(*source);
  }
}

void EnqueueRequest::MergeFrom(const EnqueueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.EnqueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  queue_.MergeFrom(from.queue_);
  if (from.context_id() != 0) {
    set_context_id(from.context_id());
  }
}

void EnqueueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.EnqueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnqueueRequest::CopyFrom(const EnqueueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.EnqueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnqueueRequest::IsInitialized() const {
  return true;
}

void EnqueueRequest::Swap(EnqueueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnqueueRequest::InternalSwap(EnqueueRequest* other) {
  using std::swap;
  queue_.InternalSwap(&other->queue_);
  swap(context_id_, other->context_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnqueueRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnqueueRequest

// fixed64 context_id = 1;
void EnqueueRequest::clear_context_id() {
  context_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 EnqueueRequest::context_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.EnqueueRequest.context_id)
  return context_id_;
}
void EnqueueRequest::set_context_id(::google::protobuf::uint64 value) {
  
  context_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.eager.EnqueueRequest.context_id)
}

// repeated .tensorflow.eager.QueueItem queue = 3;
int EnqueueRequest::queue_size() const {
  return queue_.size();
}
void EnqueueRequest::clear_queue() {
  queue_.Clear();
}
const ::tensorflow::eager::QueueItem& EnqueueRequest::queue(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.EnqueueRequest.queue)
  return queue_.Get(index);
}
::tensorflow::eager::QueueItem* EnqueueRequest::mutable_queue(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.EnqueueRequest.queue)
  return queue_.Mutable(index);
}
::tensorflow::eager::QueueItem* EnqueueRequest::add_queue() {
  // @@protoc_insertion_point(field_add:tensorflow.eager.EnqueueRequest.queue)
  return queue_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::eager::QueueItem >*
EnqueueRequest::mutable_queue() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.EnqueueRequest.queue)
  return &queue_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::eager::QueueItem >&
EnqueueRequest::queue() const {
  // @@protoc_insertion_point(field_list:tensorflow.eager.EnqueueRequest.queue)
  return queue_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnqueueResponse::EnqueueResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.EnqueueResponse)
}
EnqueueResponse::EnqueueResponse(const EnqueueResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.EnqueueResponse)
}

void EnqueueResponse::SharedCtor() {
  _cached_size_ = 0;
}

EnqueueResponse::~EnqueueResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.EnqueueResponse)
  SharedDtor();
}

void EnqueueResponse::SharedDtor() {
}

void EnqueueResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnqueueResponse::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnqueueResponse& EnqueueResponse::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnqueueResponse* EnqueueResponse::New(::google::protobuf::Arena* arena) const {
  EnqueueResponse* n = new EnqueueResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnqueueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.EnqueueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool EnqueueResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.EnqueueResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.EnqueueResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.EnqueueResponse)
  return false;
#undef DO_
}

void EnqueueResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.EnqueueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.EnqueueResponse)
}

::google::protobuf::uint8* EnqueueResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.EnqueueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.EnqueueResponse)
  return target;
}

size_t EnqueueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.EnqueueResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnqueueResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.EnqueueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EnqueueResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnqueueResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.EnqueueResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.EnqueueResponse)
    MergeFrom(*source);
  }
}

void EnqueueResponse::MergeFrom(const EnqueueResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.EnqueueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EnqueueResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.EnqueueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnqueueResponse::CopyFrom(const EnqueueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.EnqueueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnqueueResponse::IsInitialized() const {
  return true;
}

void EnqueueResponse::Swap(EnqueueResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnqueueResponse::InternalSwap(EnqueueResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnqueueResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnqueueResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitQueueDoneRequest::kContextIdFieldNumber;
const int WaitQueueDoneRequest::kOpIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitQueueDoneRequest::WaitQueueDoneRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.WaitQueueDoneRequest)
}
WaitQueueDoneRequest::WaitQueueDoneRequest(const WaitQueueDoneRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      op_id_(from.op_id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_id_ = from.context_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.WaitQueueDoneRequest)
}

void WaitQueueDoneRequest::SharedCtor() {
  context_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

WaitQueueDoneRequest::~WaitQueueDoneRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.WaitQueueDoneRequest)
  SharedDtor();
}

void WaitQueueDoneRequest::SharedDtor() {
}

void WaitQueueDoneRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WaitQueueDoneRequest::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitQueueDoneRequest& WaitQueueDoneRequest::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

WaitQueueDoneRequest* WaitQueueDoneRequest::New(::google::protobuf::Arena* arena) const {
  WaitQueueDoneRequest* n = new WaitQueueDoneRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WaitQueueDoneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.WaitQueueDoneRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_id_.Clear();
  context_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool WaitQueueDoneRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.WaitQueueDoneRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 context_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &context_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 op_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_op_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_op_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.WaitQueueDoneRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.WaitQueueDoneRequest)
  return false;
#undef DO_
}

void WaitQueueDoneRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.WaitQueueDoneRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->context_id(), output);
  }

  // repeated int64 op_id = 2;
  if (this->op_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _op_id_cached_byte_size_));
  }
  for (int i = 0, n = this->op_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->op_id(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.WaitQueueDoneRequest)
}

::google::protobuf::uint8* WaitQueueDoneRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.WaitQueueDoneRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->context_id(), target);
  }

  // repeated int64 op_id = 2;
  if (this->op_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _op_id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->op_id_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.WaitQueueDoneRequest)
  return target;
}

size_t WaitQueueDoneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.WaitQueueDoneRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 op_id = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->op_id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _op_id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WaitQueueDoneRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.WaitQueueDoneRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitQueueDoneRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitQueueDoneRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.WaitQueueDoneRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.WaitQueueDoneRequest)
    MergeFrom(*source);
  }
}

void WaitQueueDoneRequest::MergeFrom(const WaitQueueDoneRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.WaitQueueDoneRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  op_id_.MergeFrom(from.op_id_);
  if (from.context_id() != 0) {
    set_context_id(from.context_id());
  }
}

void WaitQueueDoneRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.WaitQueueDoneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitQueueDoneRequest::CopyFrom(const WaitQueueDoneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.WaitQueueDoneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitQueueDoneRequest::IsInitialized() const {
  return true;
}

void WaitQueueDoneRequest::Swap(WaitQueueDoneRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitQueueDoneRequest::InternalSwap(WaitQueueDoneRequest* other) {
  using std::swap;
  op_id_.InternalSwap(&other->op_id_);
  swap(context_id_, other->context_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WaitQueueDoneRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WaitQueueDoneRequest

// fixed64 context_id = 1;
void WaitQueueDoneRequest::clear_context_id() {
  context_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 WaitQueueDoneRequest::context_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.WaitQueueDoneRequest.context_id)
  return context_id_;
}
void WaitQueueDoneRequest::set_context_id(::google::protobuf::uint64 value) {
  
  context_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.eager.WaitQueueDoneRequest.context_id)
}

// repeated int64 op_id = 2;
int WaitQueueDoneRequest::op_id_size() const {
  return op_id_.size();
}
void WaitQueueDoneRequest::clear_op_id() {
  op_id_.Clear();
}
::google::protobuf::int64 WaitQueueDoneRequest::op_id(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.WaitQueueDoneRequest.op_id)
  return op_id_.Get(index);
}
void WaitQueueDoneRequest::set_op_id(int index, ::google::protobuf::int64 value) {
  op_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.WaitQueueDoneRequest.op_id)
}
void WaitQueueDoneRequest::add_op_id(::google::protobuf::int64 value) {
  op_id_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.eager.WaitQueueDoneRequest.op_id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
WaitQueueDoneRequest::op_id() const {
  // @@protoc_insertion_point(field_list:tensorflow.eager.WaitQueueDoneRequest.op_id)
  return op_id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
WaitQueueDoneRequest::mutable_op_id() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.WaitQueueDoneRequest.op_id)
  return &op_id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitQueueDoneResponse::WaitQueueDoneResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.WaitQueueDoneResponse)
}
WaitQueueDoneResponse::WaitQueueDoneResponse(const WaitQueueDoneResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.WaitQueueDoneResponse)
}

void WaitQueueDoneResponse::SharedCtor() {
  _cached_size_ = 0;
}

WaitQueueDoneResponse::~WaitQueueDoneResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.WaitQueueDoneResponse)
  SharedDtor();
}

void WaitQueueDoneResponse::SharedDtor() {
}

void WaitQueueDoneResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WaitQueueDoneResponse::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitQueueDoneResponse& WaitQueueDoneResponse::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

WaitQueueDoneResponse* WaitQueueDoneResponse::New(::google::protobuf::Arena* arena) const {
  WaitQueueDoneResponse* n = new WaitQueueDoneResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WaitQueueDoneResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.WaitQueueDoneResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool WaitQueueDoneResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.WaitQueueDoneResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.WaitQueueDoneResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.WaitQueueDoneResponse)
  return false;
#undef DO_
}

void WaitQueueDoneResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.WaitQueueDoneResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.WaitQueueDoneResponse)
}

::google::protobuf::uint8* WaitQueueDoneResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.WaitQueueDoneResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.WaitQueueDoneResponse)
  return target;
}

size_t WaitQueueDoneResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.WaitQueueDoneResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WaitQueueDoneResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.WaitQueueDoneResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitQueueDoneResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitQueueDoneResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.WaitQueueDoneResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.WaitQueueDoneResponse)
    MergeFrom(*source);
  }
}

void WaitQueueDoneResponse::MergeFrom(const WaitQueueDoneResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.WaitQueueDoneResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void WaitQueueDoneResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.WaitQueueDoneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitQueueDoneResponse::CopyFrom(const WaitQueueDoneResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.WaitQueueDoneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitQueueDoneResponse::IsInitialized() const {
  return true;
}

void WaitQueueDoneResponse::Swap(WaitQueueDoneResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitQueueDoneResponse::InternalSwap(WaitQueueDoneResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WaitQueueDoneResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WaitQueueDoneResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeepAliveRequest::kContextIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeepAliveRequest::KeepAliveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.KeepAliveRequest)
}
KeepAliveRequest::KeepAliveRequest(const KeepAliveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_id_ = from.context_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.KeepAliveRequest)
}

void KeepAliveRequest::SharedCtor() {
  context_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

KeepAliveRequest::~KeepAliveRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.KeepAliveRequest)
  SharedDtor();
}

void KeepAliveRequest::SharedDtor() {
}

void KeepAliveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeepAliveRequest::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeepAliveRequest& KeepAliveRequest::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

KeepAliveRequest* KeepAliveRequest::New(::google::protobuf::Arena* arena) const {
  KeepAliveRequest* n = new KeepAliveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeepAliveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.KeepAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  context_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool KeepAliveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.KeepAliveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 context_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &context_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.KeepAliveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.KeepAliveRequest)
  return false;
#undef DO_
}

void KeepAliveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.KeepAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->context_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.KeepAliveRequest)
}

::google::protobuf::uint8* KeepAliveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.KeepAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->context_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.KeepAliveRequest)
  return target;
}

size_t KeepAliveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.KeepAliveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeepAliveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.KeepAliveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const KeepAliveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeepAliveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.KeepAliveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.KeepAliveRequest)
    MergeFrom(*source);
  }
}

void KeepAliveRequest::MergeFrom(const KeepAliveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.KeepAliveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.context_id() != 0) {
    set_context_id(from.context_id());
  }
}

void KeepAliveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.KeepAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeepAliveRequest::CopyFrom(const KeepAliveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.KeepAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeepAliveRequest::IsInitialized() const {
  return true;
}

void KeepAliveRequest::Swap(KeepAliveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeepAliveRequest::InternalSwap(KeepAliveRequest* other) {
  using std::swap;
  swap(context_id_, other->context_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeepAliveRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeepAliveRequest

// fixed64 context_id = 1;
void KeepAliveRequest::clear_context_id() {
  context_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 KeepAliveRequest::context_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.KeepAliveRequest.context_id)
  return context_id_;
}
void KeepAliveRequest::set_context_id(::google::protobuf::uint64 value) {
  
  context_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.eager.KeepAliveRequest.context_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeepAliveResponse::KeepAliveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.KeepAliveResponse)
}
KeepAliveResponse::KeepAliveResponse(const KeepAliveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.KeepAliveResponse)
}

void KeepAliveResponse::SharedCtor() {
  _cached_size_ = 0;
}

KeepAliveResponse::~KeepAliveResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.KeepAliveResponse)
  SharedDtor();
}

void KeepAliveResponse::SharedDtor() {
}

void KeepAliveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeepAliveResponse::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeepAliveResponse& KeepAliveResponse::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

KeepAliveResponse* KeepAliveResponse::New(::google::protobuf::Arena* arena) const {
  KeepAliveResponse* n = new KeepAliveResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeepAliveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.KeepAliveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool KeepAliveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.KeepAliveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.KeepAliveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.KeepAliveResponse)
  return false;
#undef DO_
}

void KeepAliveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.KeepAliveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.KeepAliveResponse)
}

::google::protobuf::uint8* KeepAliveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.KeepAliveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.KeepAliveResponse)
  return target;
}

size_t KeepAliveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.KeepAliveResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeepAliveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.KeepAliveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const KeepAliveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeepAliveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.KeepAliveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.KeepAliveResponse)
    MergeFrom(*source);
  }
}

void KeepAliveResponse::MergeFrom(const KeepAliveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.KeepAliveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void KeepAliveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.KeepAliveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeepAliveResponse::CopyFrom(const KeepAliveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.KeepAliveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeepAliveResponse::IsInitialized() const {
  return true;
}

void KeepAliveResponse::Swap(KeepAliveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeepAliveResponse::InternalSwap(KeepAliveResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeepAliveResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeepAliveResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseContextRequest::kContextIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseContextRequest::CloseContextRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.CloseContextRequest)
}
CloseContextRequest::CloseContextRequest(const CloseContextRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_id_ = from.context_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.CloseContextRequest)
}

void CloseContextRequest::SharedCtor() {
  context_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

CloseContextRequest::~CloseContextRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.CloseContextRequest)
  SharedDtor();
}

void CloseContextRequest::SharedDtor() {
}

void CloseContextRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseContextRequest::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseContextRequest& CloseContextRequest::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

CloseContextRequest* CloseContextRequest::New(::google::protobuf::Arena* arena) const {
  CloseContextRequest* n = new CloseContextRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseContextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.CloseContextRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  context_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool CloseContextRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.CloseContextRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 context_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &context_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.CloseContextRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.CloseContextRequest)
  return false;
#undef DO_
}

void CloseContextRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.CloseContextRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->context_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.CloseContextRequest)
}

::google::protobuf::uint8* CloseContextRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.CloseContextRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->context_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.CloseContextRequest)
  return target;
}

size_t CloseContextRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.CloseContextRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseContextRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.CloseContextRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseContextRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseContextRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.CloseContextRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.CloseContextRequest)
    MergeFrom(*source);
  }
}

void CloseContextRequest::MergeFrom(const CloseContextRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.CloseContextRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.context_id() != 0) {
    set_context_id(from.context_id());
  }
}

void CloseContextRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.CloseContextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseContextRequest::CopyFrom(const CloseContextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.CloseContextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseContextRequest::IsInitialized() const {
  return true;
}

void CloseContextRequest::Swap(CloseContextRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseContextRequest::InternalSwap(CloseContextRequest* other) {
  using std::swap;
  swap(context_id_, other->context_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseContextRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CloseContextRequest

// fixed64 context_id = 1;
void CloseContextRequest::clear_context_id() {
  context_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CloseContextRequest::context_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CloseContextRequest.context_id)
  return context_id_;
}
void CloseContextRequest::set_context_id(::google::protobuf::uint64 value) {
  
  context_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.eager.CloseContextRequest.context_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseContextResponse::CloseContextResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.CloseContextResponse)
}
CloseContextResponse::CloseContextResponse(const CloseContextResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.CloseContextResponse)
}

void CloseContextResponse::SharedCtor() {
  _cached_size_ = 0;
}

CloseContextResponse::~CloseContextResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.CloseContextResponse)
  SharedDtor();
}

void CloseContextResponse::SharedDtor() {
}

void CloseContextResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseContextResponse::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseContextResponse& CloseContextResponse::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

CloseContextResponse* CloseContextResponse::New(::google::protobuf::Arena* arena) const {
  CloseContextResponse* n = new CloseContextResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseContextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.CloseContextResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CloseContextResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.CloseContextResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.CloseContextResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.CloseContextResponse)
  return false;
#undef DO_
}

void CloseContextResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.CloseContextResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.CloseContextResponse)
}

::google::protobuf::uint8* CloseContextResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.CloseContextResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.CloseContextResponse)
  return target;
}

size_t CloseContextResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.CloseContextResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseContextResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.CloseContextResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseContextResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseContextResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.CloseContextResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.CloseContextResponse)
    MergeFrom(*source);
  }
}

void CloseContextResponse::MergeFrom(const CloseContextResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.CloseContextResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CloseContextResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.CloseContextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseContextResponse::CopyFrom(const CloseContextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.CloseContextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseContextResponse::IsInitialized() const {
  return true;
}

void CloseContextResponse::Swap(CloseContextResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseContextResponse::InternalSwap(CloseContextResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseContextResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CloseContextResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterFunctionRequest::kContextIdFieldNumber;
const int RegisterFunctionRequest::kFunctionDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterFunctionRequest::RegisterFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.RegisterFunctionRequest)
}
RegisterFunctionRequest::RegisterFunctionRequest(const RegisterFunctionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_function_def()) {
    function_def_ = new ::tensorflow::FunctionDef(*from.function_def_);
  } else {
    function_def_ = NULL;
  }
  context_id_ = from.context_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.RegisterFunctionRequest)
}

void RegisterFunctionRequest::SharedCtor() {
  ::memset(&function_def_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&context_id_) -
      reinterpret_cast<char*>(&function_def_)) + sizeof(context_id_));
  _cached_size_ = 0;
}

RegisterFunctionRequest::~RegisterFunctionRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.RegisterFunctionRequest)
  SharedDtor();
}

void RegisterFunctionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete function_def_;
}

void RegisterFunctionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterFunctionRequest::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterFunctionRequest& RegisterFunctionRequest::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterFunctionRequest* RegisterFunctionRequest::New(::google::protobuf::Arena* arena) const {
  RegisterFunctionRequest* n = new RegisterFunctionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.RegisterFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && function_def_ != NULL) {
    delete function_def_;
  }
  function_def_ = NULL;
  context_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RegisterFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.RegisterFunctionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 context_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &context_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.FunctionDef function_def = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_function_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.RegisterFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.RegisterFunctionRequest)
  return false;
#undef DO_
}

void RegisterFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.RegisterFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->context_id(), output);
  }

  // .tensorflow.FunctionDef function_def = 2;
  if (this->has_function_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->function_def_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.RegisterFunctionRequest)
}

::google::protobuf::uint8* RegisterFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.RegisterFunctionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->context_id(), target);
  }

  // .tensorflow.FunctionDef function_def = 2;
  if (this->has_function_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->function_def_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.RegisterFunctionRequest)
  return target;
}

size_t RegisterFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.RegisterFunctionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.FunctionDef function_def = 2;
  if (this->has_function_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->function_def_);
  }

  // fixed64 context_id = 1;
  if (this->context_id() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.RegisterFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.RegisterFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.RegisterFunctionRequest)
    MergeFrom(*source);
  }
}

void RegisterFunctionRequest::MergeFrom(const RegisterFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.RegisterFunctionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_function_def()) {
    mutable_function_def()->::tensorflow::FunctionDef::MergeFrom(from.function_def());
  }
  if (from.context_id() != 0) {
    set_context_id(from.context_id());
  }
}

void RegisterFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.RegisterFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterFunctionRequest::CopyFrom(const RegisterFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.RegisterFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterFunctionRequest::IsInitialized() const {
  return true;
}

void RegisterFunctionRequest::Swap(RegisterFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterFunctionRequest::InternalSwap(RegisterFunctionRequest* other) {
  using std::swap;
  swap(function_def_, other->function_def_);
  swap(context_id_, other->context_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterFunctionRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterFunctionRequest

// fixed64 context_id = 1;
void RegisterFunctionRequest::clear_context_id() {
  context_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RegisterFunctionRequest::context_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.RegisterFunctionRequest.context_id)
  return context_id_;
}
void RegisterFunctionRequest::set_context_id(::google::protobuf::uint64 value) {
  
  context_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.eager.RegisterFunctionRequest.context_id)
}

// .tensorflow.FunctionDef function_def = 2;
bool RegisterFunctionRequest::has_function_def() const {
  return this != internal_default_instance() && function_def_ != NULL;
}
void RegisterFunctionRequest::clear_function_def() {
  if (GetArenaNoVirtual() == NULL && function_def_ != NULL) delete function_def_;
  function_def_ = NULL;
}
const ::tensorflow::FunctionDef& RegisterFunctionRequest::function_def() const {
  const ::tensorflow::FunctionDef* p = function_def_;
  // @@protoc_insertion_point(field_get:tensorflow.eager.RegisterFunctionRequest.function_def)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::FunctionDef*>(
      &::tensorflow::_FunctionDef_default_instance_);
}
::tensorflow::FunctionDef* RegisterFunctionRequest::mutable_function_def() {
  
  if (function_def_ == NULL) {
    function_def_ = new ::tensorflow::FunctionDef;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.RegisterFunctionRequest.function_def)
  return function_def_;
}
::tensorflow::FunctionDef* RegisterFunctionRequest::release_function_def() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.RegisterFunctionRequest.function_def)
  
  ::tensorflow::FunctionDef* temp = function_def_;
  function_def_ = NULL;
  return temp;
}
void RegisterFunctionRequest::set_allocated_function_def(::tensorflow::FunctionDef* function_def) {
  delete function_def_;
  if (function_def != NULL && function_def->GetArena() != NULL) {
    ::tensorflow::FunctionDef* new_function_def = new ::tensorflow::FunctionDef;
    new_function_def->CopyFrom(*function_def);
    function_def = new_function_def;
  }
  function_def_ = function_def;
  if (function_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.RegisterFunctionRequest.function_def)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterFunctionResponse::RegisterFunctionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.eager.RegisterFunctionResponse)
}
RegisterFunctionResponse::RegisterFunctionResponse(const RegisterFunctionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.eager.RegisterFunctionResponse)
}

void RegisterFunctionResponse::SharedCtor() {
  _cached_size_ = 0;
}

RegisterFunctionResponse::~RegisterFunctionResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.eager.RegisterFunctionResponse)
  SharedDtor();
}

void RegisterFunctionResponse::SharedDtor() {
}

void RegisterFunctionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterFunctionResponse::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterFunctionResponse& RegisterFunctionResponse::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterFunctionResponse* RegisterFunctionResponse::New(::google::protobuf::Arena* arena) const {
  RegisterFunctionResponse* n = new RegisterFunctionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterFunctionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.eager.RegisterFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RegisterFunctionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.eager.RegisterFunctionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.eager.RegisterFunctionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.eager.RegisterFunctionResponse)
  return false;
#undef DO_
}

void RegisterFunctionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.eager.RegisterFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.eager.RegisterFunctionResponse)
}

::google::protobuf::uint8* RegisterFunctionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.eager.RegisterFunctionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.eager.RegisterFunctionResponse)
  return target;
}

size_t RegisterFunctionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.eager.RegisterFunctionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterFunctionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.eager.RegisterFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterFunctionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterFunctionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.eager.RegisterFunctionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.eager.RegisterFunctionResponse)
    MergeFrom(*source);
  }
}

void RegisterFunctionResponse::MergeFrom(const RegisterFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.eager.RegisterFunctionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RegisterFunctionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.eager.RegisterFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterFunctionResponse::CopyFrom(const RegisterFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.eager.RegisterFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterFunctionResponse::IsInitialized() const {
  return true;
}

void RegisterFunctionResponse::Swap(RegisterFunctionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterFunctionResponse::InternalSwap(RegisterFunctionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterFunctionResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterFunctionResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace eager
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
